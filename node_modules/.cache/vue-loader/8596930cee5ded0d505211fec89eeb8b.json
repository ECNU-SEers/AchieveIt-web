{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserList.vue","mtime":1584099524339},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Admin from '@/sys/models/admin'\r\nimport LinTable from '@/components/base/table/lin-table'\r\nimport UserInfo from './UserInfo'\r\nimport UserPassword from './UserPassword'\r\n\r\nexport default {\r\n  components: { LinTable, UserInfo, UserPassword },\r\n  inject: ['eventBus'],\r\n  data() {\r\n    return {\r\n      id: 0, // 用户id\r\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\r\n      editIndex: null, // 编辑的行\r\n      total_nums: 0, // 角色内的用户总数\r\n      currentPage: 1, // 默认获取第一页的数据\r\n      pageCount: 10, // 每页10条数据\r\n      tableData: [], // 表格数据\r\n      tableColumn: [], // 表头数据\r\n      operate: [], // 表格按键操作区\r\n      dialogFormVisible: false, // 控制弹窗显示\r\n      selectGroup: '', // 选中的角色Id\r\n      groups: [], // 所有角色\r\n      group_id: undefined,\r\n      activeTab: '修改信息',\r\n      form: {\r\n        // 表单信息\r\n        username: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        email: '',\r\n        group_ids: [],\r\n      },\r\n      loading: false,\r\n    }\r\n  },\r\n  methods: {\r\n    // 根据角色 刷新/获取角色内的用户\r\n    async getAdminUsers() {\r\n      let res\r\n      const currentPage = this.currentPage - 1\r\n      try {\r\n        this.loading = true\r\n        res = await Admin.getAdminUsers({ group_id: this.group_id, count: this.pageCount, page: currentPage }) // eslint-disable-line\r\n        this.loading = false\r\n        this.tableData = this.shuffleList(res.items)\r\n        this.total_nums = res.total\r\n      } catch (e) {\r\n        this.loading = false\r\n        console.log(e)\r\n      }\r\n    },\r\n    // 获取所有角色\r\n    async getAllGroups() {\r\n      try {\r\n        this.loading = true\r\n        this.groups = await Admin.getAllGroups()\r\n        this.loading = false\r\n      } catch (e) {\r\n        this.loading = false\r\n        console.log(e)\r\n      }\r\n    },\r\n    // 获取所拥有的权限并渲染  由子组件提供\r\n    async handleEdit(val) {\r\n      this.editIndex = val.index\r\n      let selectedData\r\n      // 单击 编辑按键\r\n      if (val.index >= 0) {\r\n        selectedData = val.row\r\n      } else {\r\n        // 单击 table row\r\n        selectedData = val\r\n      }\r\n      this.id = selectedData.id\r\n      this.form.username = selectedData.username\r\n      this.form.email = selectedData.email\r\n      this.form.group_ids = selectedData.groups\r\n      this.dialogFormVisible = true\r\n    },\r\n    // 下拉框选择角色\r\n    async handleChange() {\r\n      this.currentPage = 1\r\n      this.loading = true\r\n      await this.getAdminUsers()\r\n      this.loading = false\r\n    },\r\n    // 切换table页\r\n    async handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.loading = true\r\n      await this.getAdminUsers('changePage')\r\n      this.loading = false\r\n    },\r\n    handleDelete(val) {\r\n      let res\r\n      this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).then(async () => {\r\n        try {\r\n          this.loading = true\r\n          res = await Admin.deleteOneUser(val.row.id)\r\n        } catch (e) {\r\n          this.loading = false\r\n          console.log(e)\r\n        }\r\n        if (res.code < window.SUCCESS_CODE) {\r\n          this.loading = false\r\n          if (this.total_nums % this.pageCount === 1 && this.currentPage !== 1) {\r\n            // 判断删除的是不是每一页的最后一条数据\r\n            this.currentPage--\r\n          }\r\n          await this.getAdminUsers()\r\n          this.$message({\r\n            type: 'success',\r\n            message: `${res.message}`,\r\n          })\r\n        } else {\r\n          this.loading = false\r\n          this.$message.error(`${res.message}`)\r\n        }\r\n      })\r\n    },\r\n    // 提交表单信息\r\n    async confirmEdit() {\r\n      if (this.activeTab === '修改信息') {\r\n        await this.$refs.userInfo.submitForm('form')\r\n      } else {\r\n        await this.$refs.password.submitForm('form')\r\n      }\r\n    },\r\n    // 重置\r\n    resetForm() {\r\n      if (this.activeTab === '修改信息') {\r\n        this.$refs.userInfo.resetForm('form')\r\n      } else {\r\n        this.$refs.password.resetForm('form')\r\n      }\r\n    },\r\n    // 双击 table ro\r\n    rowClick(row) {\r\n      this.handleEdit(row)\r\n    },\r\n    // 弹框 右上角 X\r\n    handleClose(done) {\r\n      this.dialogFormVisible = false\r\n      done()\r\n    },\r\n    // 切换tab栏\r\n    handleClick(tab) {\r\n      console.log(tab)\r\n      this.activeTab = tab.name\r\n    },\r\n    // 监听子组件更新用户信息是否成功\r\n    async handleInfoResult(flag) {\r\n      this.dialogFormVisible = false\r\n      if (flag === true) {\r\n        this.getAdminUsers()\r\n      }\r\n    },\r\n    // 监听子组件更新密码是否成功\r\n    handlePasswordResult(result) {\r\n      if (result === true) {\r\n        this.dialogFormVisible = false\r\n      }\r\n    },\r\n    // 监听添加用户是否成功\r\n    async addUser(flag) {\r\n      if (flag === true) {\r\n        if (this.total_nums % this.pageCount === 0) {\r\n          // 判断当前页的数据是不是满了，需要增加新的页码\r\n          this.currentPage++\r\n        }\r\n        await this.getAdminUsers()\r\n        this.refreshPagination = false // 刷新pagination组件\r\n        this.$nextTick(() => {\r\n          this.refreshPagination = true\r\n        })\r\n      }\r\n    },\r\n    shuffleList(users) {\r\n      const list = []\r\n      users.forEach(element => {\r\n        const groups = []\r\n        element.groups.forEach(item => {\r\n          groups.push(item.name)\r\n        })\r\n        element.groupNames = groups.join(',')\r\n        list.push(element)\r\n      })\r\n      return list\r\n    },\r\n  },\r\n  async created() {\r\n    await this.getAdminUsers()\r\n    this.getAllGroups()\r\n    this.tableColumn = [{ prop: 'username', label: '名称' }, { prop: 'groupNames', label: '所属角色' }] // 设置表头信息\r\n    this.operate = [\r\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\r\n      { name: '删除', func: 'handleDelete', type: 'danger' },\r\n    ]\r\n    this.eventBus.$on('addUser', this.addUser)\r\n  },\r\n  beforeDestroy() {\r\n    this.eventBus.$off('addUser', this.addUser)\r\n  },\r\n}\r\n",{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"UserList.vue","sourceRoot":"src/views/admin/user","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">用户列表</div>\r\n      <!-- 角色选择下拉框 -->\r\n      <el-select size=\"medium\" filterable v-model=\"group_id\" placeholder=\"请选择角色\" @change=\"handleChange\" clearable>\r\n        <el-option v-for=\"(group, index) in groups\" :key=\"index\" :label=\"group.name\" :value=\"group.id\"> </el-option>\r\n      </el-select>\r\n    </div>\r\n    <!-- 表格 -->\r\n    <lin-table\r\n      :tableColumn=\"tableColumn\"\r\n      :tableData=\"tableData\"\r\n      :operate=\"operate\"\r\n      @handleEdit=\"handleEdit\"\r\n      @handleDelete=\"handleDelete\"\r\n      @row-click=\"rowClick\"\r\n      v-loading=\"loading\"\r\n    ></lin-table>\r\n    <!-- 分页 -->\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        @current-change=\"handleCurrentChange\"\r\n        :background=\"true\"\r\n        :page-size=\"pageCount\"\r\n        :current-page=\"currentPage\"\r\n        v-if=\"refreshPagination\"\r\n        layout=\"prev, pager, next, jumper\"\r\n        :total=\"total_nums\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n    <!-- 弹窗 -->\r\n    <el-dialog :append-to-body=\"true\" :before-close=\"handleClose\" :visible.sync=\"dialogFormVisible\">\r\n      <div style=\"margin-top:-25px;\">\r\n        <el-tabs v-model=\"activeTab\" @tab-click=\"handleClick\">\r\n          <el-tab-pane label=\"修改信息\" name=\"修改信息\">\r\n            <user-info\r\n              ref=\"userInfo\"\r\n              v-if=\"dialogFormVisible\"\r\n              @handleInfoResult=\"handleInfoResult\"\r\n              labelPosition=\"right\"\r\n              pageType=\"edit\"\r\n              :id=\"id\"\r\n              :groups=\"groups\"\r\n              :info=\"form\"\r\n              :submit=\"false\"\r\n              class=\"info\"\r\n            />\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"修改密码\" name=\"修改密码\">\r\n            <user-password @handlePasswordResult=\"handlePasswordResult\" ref=\"password\" :id=\"id\" class=\"password\" />\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n      <!-- 按键操作 -->\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"confirmEdit\">确 定</el-button>\r\n        <el-button @click=\"resetForm\">重 置</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Admin from '@/sys/models/admin'\r\nimport LinTable from '@/components/base/table/lin-table'\r\nimport UserInfo from './UserInfo'\r\nimport UserPassword from './UserPassword'\r\n\r\nexport default {\r\n  components: { LinTable, UserInfo, UserPassword },\r\n  inject: ['eventBus'],\r\n  data() {\r\n    return {\r\n      id: 0, // 用户id\r\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\r\n      editIndex: null, // 编辑的行\r\n      total_nums: 0, // 角色内的用户总数\r\n      currentPage: 1, // 默认获取第一页的数据\r\n      pageCount: 10, // 每页10条数据\r\n      tableData: [], // 表格数据\r\n      tableColumn: [], // 表头数据\r\n      operate: [], // 表格按键操作区\r\n      dialogFormVisible: false, // 控制弹窗显示\r\n      selectGroup: '', // 选中的角色Id\r\n      groups: [], // 所有角色\r\n      group_id: undefined,\r\n      activeTab: '修改信息',\r\n      form: {\r\n        // 表单信息\r\n        username: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        email: '',\r\n        group_ids: [],\r\n      },\r\n      loading: false,\r\n    }\r\n  },\r\n  methods: {\r\n    // 根据角色 刷新/获取角色内的用户\r\n    async getAdminUsers() {\r\n      let res\r\n      const currentPage = this.currentPage - 1\r\n      try {\r\n        this.loading = true\r\n        res = await Admin.getAdminUsers({ group_id: this.group_id, count: this.pageCount, page: currentPage }) // eslint-disable-line\r\n        this.loading = false\r\n        this.tableData = this.shuffleList(res.items)\r\n        this.total_nums = res.total\r\n      } catch (e) {\r\n        this.loading = false\r\n        console.log(e)\r\n      }\r\n    },\r\n    // 获取所有角色\r\n    async getAllGroups() {\r\n      try {\r\n        this.loading = true\r\n        this.groups = await Admin.getAllGroups()\r\n        this.loading = false\r\n      } catch (e) {\r\n        this.loading = false\r\n        console.log(e)\r\n      }\r\n    },\r\n    // 获取所拥有的权限并渲染  由子组件提供\r\n    async handleEdit(val) {\r\n      this.editIndex = val.index\r\n      let selectedData\r\n      // 单击 编辑按键\r\n      if (val.index >= 0) {\r\n        selectedData = val.row\r\n      } else {\r\n        // 单击 table row\r\n        selectedData = val\r\n      }\r\n      this.id = selectedData.id\r\n      this.form.username = selectedData.username\r\n      this.form.email = selectedData.email\r\n      this.form.group_ids = selectedData.groups\r\n      this.dialogFormVisible = true\r\n    },\r\n    // 下拉框选择角色\r\n    async handleChange() {\r\n      this.currentPage = 1\r\n      this.loading = true\r\n      await this.getAdminUsers()\r\n      this.loading = false\r\n    },\r\n    // 切换table页\r\n    async handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.loading = true\r\n      await this.getAdminUsers('changePage')\r\n      this.loading = false\r\n    },\r\n    handleDelete(val) {\r\n      let res\r\n      this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).then(async () => {\r\n        try {\r\n          this.loading = true\r\n          res = await Admin.deleteOneUser(val.row.id)\r\n        } catch (e) {\r\n          this.loading = false\r\n          console.log(e)\r\n        }\r\n        if (res.code < window.SUCCESS_CODE) {\r\n          this.loading = false\r\n          if (this.total_nums % this.pageCount === 1 && this.currentPage !== 1) {\r\n            // 判断删除的是不是每一页的最后一条数据\r\n            this.currentPage--\r\n          }\r\n          await this.getAdminUsers()\r\n          this.$message({\r\n            type: 'success',\r\n            message: `${res.message}`,\r\n          })\r\n        } else {\r\n          this.loading = false\r\n          this.$message.error(`${res.message}`)\r\n        }\r\n      })\r\n    },\r\n    // 提交表单信息\r\n    async confirmEdit() {\r\n      if (this.activeTab === '修改信息') {\r\n        await this.$refs.userInfo.submitForm('form')\r\n      } else {\r\n        await this.$refs.password.submitForm('form')\r\n      }\r\n    },\r\n    // 重置\r\n    resetForm() {\r\n      if (this.activeTab === '修改信息') {\r\n        this.$refs.userInfo.resetForm('form')\r\n      } else {\r\n        this.$refs.password.resetForm('form')\r\n      }\r\n    },\r\n    // 双击 table ro\r\n    rowClick(row) {\r\n      this.handleEdit(row)\r\n    },\r\n    // 弹框 右上角 X\r\n    handleClose(done) {\r\n      this.dialogFormVisible = false\r\n      done()\r\n    },\r\n    // 切换tab栏\r\n    handleClick(tab) {\r\n      console.log(tab)\r\n      this.activeTab = tab.name\r\n    },\r\n    // 监听子组件更新用户信息是否成功\r\n    async handleInfoResult(flag) {\r\n      this.dialogFormVisible = false\r\n      if (flag === true) {\r\n        this.getAdminUsers()\r\n      }\r\n    },\r\n    // 监听子组件更新密码是否成功\r\n    handlePasswordResult(result) {\r\n      if (result === true) {\r\n        this.dialogFormVisible = false\r\n      }\r\n    },\r\n    // 监听添加用户是否成功\r\n    async addUser(flag) {\r\n      if (flag === true) {\r\n        if (this.total_nums % this.pageCount === 0) {\r\n          // 判断当前页的数据是不是满了，需要增加新的页码\r\n          this.currentPage++\r\n        }\r\n        await this.getAdminUsers()\r\n        this.refreshPagination = false // 刷新pagination组件\r\n        this.$nextTick(() => {\r\n          this.refreshPagination = true\r\n        })\r\n      }\r\n    },\r\n    shuffleList(users) {\r\n      const list = []\r\n      users.forEach(element => {\r\n        const groups = []\r\n        element.groups.forEach(item => {\r\n          groups.push(item.name)\r\n        })\r\n        element.groupNames = groups.join(',')\r\n        list.push(element)\r\n      })\r\n      return list\r\n    },\r\n  },\r\n  async created() {\r\n    await this.getAdminUsers()\r\n    this.getAllGroups()\r\n    this.tableColumn = [{ prop: 'username', label: '名称' }, { prop: 'groupNames', label: '所属角色' }] // 设置表头信息\r\n    this.operate = [\r\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\r\n      { name: '删除', func: 'handleDelete', type: 'danger' },\r\n    ]\r\n    this.eventBus.$on('addUser', this.addUser)\r\n  },\r\n  beforeDestroy() {\r\n    this.eventBus.$off('addUser', this.addUser)\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  padding: 0 30px;\r\n\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .title {\r\n      height: 59px;\r\n      line-height: 59px;\r\n      color: $parent-title-color;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .pagination {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin: 20px;\r\n  }\r\n}\r\n\r\n.info {\r\n  margin-left: -55px;\r\n  margin-bottom: -30px;\r\n}\r\n\r\n.password {\r\n  margin-top: 20px;\r\n  margin-left: -55px;\r\n  margin-bottom: -20px;\r\n}\r\n</style>\r\n"]}]}