{"remainingRequest":"/Users/long/Documents/Software Development Practices/code/AchieveIt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/long/Documents/Software Development Practices/code/AchieveIt-web/src/views/book/BookList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/long/Documents/Software Development Practices/code/AchieveIt-web/src/views/book/BookList.vue","mtime":1582552229006},{"path":"/Users/long/Documents/Software Development Practices/code/AchieveIt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Documents/Software Development Practices/code/AchieveIt-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/long/Documents/Software Development Practices/code/AchieveIt-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Documents/Software Development Practices/code/AchieveIt-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport book from '@/models/book'\nimport LinTable from '@/components/base/table/lin-table'\nimport BookEdit from './BookEdit'\n\nexport default {\n  components: {\n    LinTable,\n    BookEdit,\n  },\n  data() {\n    return {\n      tableColumn: [{ prop: 'title', label: '书名' }, { prop: 'author', label: '作者' }],\n      tableData: [],\n      operate: [],\n      showEdit: false,\n      editBookID: 1,\n    }\n  },\n  async created() {\n    this.loading = true\n    await this.getBooks()\n    this.operate = [\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\n      {\n        name: '删除',\n        func: 'handleDelete',\n        type: 'danger',\n        permission: '删除图书',\n      },\n    ]\n    this.loading = false\n  },\n  methods: {\n    async getBooks() {\n      try {\n        const books = await book.getBooks()\n        this.tableData = books\n      } catch (error) {\n        if (error.code === 10020) {\n          this.tableData = []\n        }\n      }\n    },\n    handleEdit(val) {\n      console.log('val', val)\n      this.showEdit = true\n      this.editBookID = val.row.id\n    },\n    handleDelete(val) {\n      this.$confirm('此操作将永久删除该图书, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await book.delectBook(val.row.id)\n        if (res.code < window.SUCCESS_CODE) {\n          this.getBooks()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    rowClick() {},\n    editClose() {\n      this.showEdit = false\n      this.getBooks()\n    },\n  },\n}\n",{"version":3,"sources":["BookList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BookList.vue","sourceRoot":"src/views/book","sourcesContent":["<template>\n  <div>\n    <!-- 列表页面 -->\n    <div class=\"container\" v-if=\"!showEdit\">\n      <div class=\"header\"><div class=\"title\">图书列表</div></div>\n      <!-- 表格 -->\n      <lin-table\n        :tableColumn=\"tableColumn\"\n        :tableData=\"tableData\"\n        :operate=\"operate\"\n        @handleEdit=\"handleEdit\"\n        @handleDelete=\"handleDelete\"\n        @row-click=\"rowClick\"\n        v-loading=\"loading\"\n      ></lin-table>\n    </div>\n\n    <!-- 编辑页面 -->\n    <book-edit v-else @editClose=\"editClose\" :editBookID=\"editBookID\"></book-edit>\n  </div>\n</template>\n\n<script>\nimport book from '@/models/book'\nimport LinTable from '@/components/base/table/lin-table'\nimport BookEdit from './BookEdit'\n\nexport default {\n  components: {\n    LinTable,\n    BookEdit,\n  },\n  data() {\n    return {\n      tableColumn: [{ prop: 'title', label: '书名' }, { prop: 'author', label: '作者' }],\n      tableData: [],\n      operate: [],\n      showEdit: false,\n      editBookID: 1,\n    }\n  },\n  async created() {\n    this.loading = true\n    await this.getBooks()\n    this.operate = [\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\n      {\n        name: '删除',\n        func: 'handleDelete',\n        type: 'danger',\n        permission: '删除图书',\n      },\n    ]\n    this.loading = false\n  },\n  methods: {\n    async getBooks() {\n      try {\n        const books = await book.getBooks()\n        this.tableData = books\n      } catch (error) {\n        if (error.code === 10020) {\n          this.tableData = []\n        }\n      }\n    },\n    handleEdit(val) {\n      console.log('val', val)\n      this.showEdit = true\n      this.editBookID = val.row.id\n    },\n    handleDelete(val) {\n      this.$confirm('此操作将永久删除该图书, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await book.delectBook(val.row.id)\n        if (res.code < window.SUCCESS_CODE) {\n          this.getBooks()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    rowClick() {},\n    editClose() {\n      this.showEdit = false\n      this.getBooks()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}