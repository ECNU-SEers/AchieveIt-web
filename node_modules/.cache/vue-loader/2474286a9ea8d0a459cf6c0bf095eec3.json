{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\plugins\\LinCmsUi\\views\\data\\tag\\Tag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\plugins\\LinCmsUi\\views\\data\\tag\\Tag.vue","mtime":1584099524273},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: '',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      items: [\r\n        { type: '', label: '标签一' },\r\n        { type: 'success', label: '标签二' },\r\n        { type: 'info', label: '标签三' },\r\n        { type: 'danger', label: '标签四' },\r\n        { type: 'warning', label: '标签五' },\r\n      ],\r\n      dynamicTags: ['标签一', '标签二', '标签三'],\r\n      inputVisible: false,\r\n      inputValue: '',\r\n      tags: [\r\n        { name: '标签一', type: '' },\r\n        { name: '标签二', type: 'success' },\r\n        { name: '标签三', type: 'info' },\r\n        { name: '标签四', type: 'warning' },\r\n        { name: '标签五', type: 'danger' },\r\n      ],\r\n      text: '',\r\n      /* eslint-disable */\r\n      base: `     \r\n        <el-tag>标签一</el-tag>\r\n        <el-tag type=\"success\">标签二</el-tag>\r\n        <el-tag type=\"info\">标签三</el-tag>\r\n        <el-tag type=\"warning\">标签四</el-tag>\r\n        <el-tag type=\"danger\">标签五</el-tag>`,\r\n      closable: `\r\n       <el-tag\r\n        v-for=\"tag in tags\"\r\n        :key=\"tag.name\"\r\n        closable\r\n        @close=\"handleCloseTag(tag)\"\r\n        :type=\"tag.type\">\r\n        {{tag.name}}\r\n      </el-tag>\r\n\r\n      <script>\r\n        export default {\r\n          data() {\r\n            return {\r\n              tags: [\r\n                { name: '标签一', type: '' },\r\n                { name: '标签二', type: 'success' },\r\n                { name: '标签三', type: 'info' },\r\n                { name: '标签四', type: 'warning' },\r\n                { name: '标签五', type: 'danger' }\r\n              ]\r\n            };\r\n          methods: {\r\n            handleCloseTag(tag) {\r\n              this.tags.splice(this.tags.indexOf(tag), 1);\r\n            },\r\n          }\r\n        }\r\n      <\\/script>`,\r\n      dynamic: `\r\n           <el-tag\r\n            :key=\"tag\"\r\n            v-for=\"tag in dynamicTags\"\r\n            closable\r\n            :disable-transitions=\"false\"\r\n            @close=\"handleClose(tag)\">\r\n            {{tag}}\r\n          </el-tag>\r\n          <el-input\r\n            class=\"input-new-tag\"\r\n            v-if=\"inputVisible\"\r\n            v-model=\"inputValue\"\r\n            ref=\"saveTagInput\"\r\n            size=\"small\"\r\n            @keyup.enter.native=\"handleInputConfirm\"\r\n            @blur=\"handleInputConfirm\"\r\n          >\r\n          </el-input>\r\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\r\n\r\n          <style>\r\n            .el-tag + .el-tag {\r\n              margin-left: 10px;\r\n            }\r\n            .button-new-tag {\r\n              margin-left: 10px;\r\n              height: 32px;\r\n              line-height: 30px;\r\n              padding-top: 0;\r\n              padding-bottom: 0;\r\n            }\r\n            .input-new-tag {\r\n              width: 90px;\r\n              margin-left: 10px;\r\n              vertical-align: bottom;\r\n            }\r\n            .input-new-tag /deep/ .el-input__inner {\r\n              height: 24px;\r\n            }\r\n          </style>\r\n\r\n          <script>\r\n            export default {\r\n              data() {\r\n                return {\r\n                  dynamicTags: ['标签一', '标签二', '标签三'],\r\n                  inputVisible: false,\r\n                  inputValue: ''\r\n                };\r\n              },\r\n              methods: {\r\n                handleClose(tag) {\r\n                  this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\r\n                },\r\n\r\n                showInput() {\r\n                  this.inputVisible = true;\r\n                  this.$nextTick(_ => {\r\n                    this.$refs.saveTagInput.$refs.input.focus();\r\n                  });\r\n                },\r\n\r\n                handleInputConfirm() {\r\n                  let inputValue = this.inputValue;\r\n                  if (inputValue) {\r\n                    this.dynamicTags.push(inputValue);\r\n                  }\r\n                  this.inputVisible = false;\r\n                  this.inputValue = '';\r\n                }\r\n              }\r\n            }\r\n          <\\/script>`,\r\n      size: `\r\n            <el-tag closable>默认标签</el-tag>\r\n            <el-tag size=\"medium\" closable>中等标签</el-tag>\r\n            <el-tag size=\"small\" closable>小型标签</el-tag>\r\n            <el-tag size=\"mini\" closable>超小标签</el-tag>\r\n            `,\r\n      theme: `<div class=\"tag-group\">\r\n              <span class=\"tag-group__title\">Dark</span>\r\n              <el-tag\r\n                v-for=\"item in items\"\r\n                :key=\"item.label\"\r\n                :type=\"item.type\"\r\n                effect=\"dark\">\r\n                {{ item.label }}\r\n              </el-tag>\r\n            </div>\r\n            <div class=\"tag-group\">\r\n              <span class=\"tag-group__title\">Plain</span>\r\n              <el-tag\r\n                v-for=\"item in items\"\r\n                :key=\"item.label\"\r\n                :type=\"item.type\"\r\n                effect=\"plain\">\r\n                {{ item.label }}\r\n              </el-tag>\r\n            </div>\r\n\r\n            <script>\r\n              export default {\r\n                data() {\r\n                  return {\r\n                    items: [\r\n                      { type: '', label: '标签一' },\r\n                      { type: 'success', label: '标签二' },\r\n                      { type: 'info', label: '标签三' },\r\n                      { type: 'danger', label: '标签四' },\r\n                      { type: 'warning', label: '标签五' }\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            <\\/script>`,\r\n    }\r\n  },\r\n  // 计算属性设置\r\n  computed: {},\r\n  // 数据变更监听\r\n  watch: {},\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    handleInputConfirm() {\r\n      let inputValue = this.inputValue\r\n      if (inputValue) {\r\n        this.dynamicTags.push(inputValue)\r\n      }\r\n      this.inputVisible = false\r\n      this.inputValue = ''\r\n    },\r\n    handleCloseTag(tag) {\r\n      this.tags.splice(this.tags.indexOf(tag), 1)\r\n    },\r\n    handleClose(tag) {\r\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\r\n    },\r\n    showInput() {\r\n      this.inputVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    // 执行获取数据等初始化动作\r\n    init() {},\r\n  },\r\n}\r\n",{"version":3,"sources":["Tag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Tag.vue","sourceRoot":"src/plugins/LinCmsUi/views/data/tag","sourcesContent":["<template>\r\n  <div class=\"lin-container\">\r\n    <div class=\"lin-title\">Tag 标签</div>\r\n    <div class=\"lin-wrap-ui\">\r\n      <el-card style=\"margin-bottom:50px;\">\r\n        <div slot=\"header\"><span>基础用法</span></div>\r\n        <el-row>\r\n          <div>\r\n            <el-tag>标签一</el-tag>\r\n            <el-tag type=\"success\">标签二</el-tag>\r\n            <el-tag type=\"info\">标签三</el-tag>\r\n            <el-tag type=\"warning\">标签四</el-tag>\r\n            <el-tag type=\"danger\">标签五</el-tag>\r\n          </div>\r\n        </el-row>\r\n        <el-collapse>\r\n          <el-collapse-item title=\"查看代码\" name=\"2\">\r\n            <div style=\"white-space: pre-wrap;\">{{ base }}</div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </el-card>\r\n      <el-card style=\"margin-bottom:50px;\">\r\n        <div slot=\"header\"><span>可移除标签</span></div>\r\n        <el-row>\r\n          <div>\r\n            <el-tag v-for=\"tag in tags\" :key=\"tag.name\" closable @close=\"handleCloseTag(tag)\" :type=\"tag.type\">\r\n              {{ tag.name }}\r\n            </el-tag>\r\n          </div>\r\n        </el-row>\r\n        <el-collapse class=\"test\" style=\"color:red;\">\r\n          <el-collapse-item title=\"查看代码\" name=\"2\">\r\n            <div style=\"white-space: pre-wrap;\">{{ closable }}</div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </el-card>\r\n      <el-card style=\"margin-bottom:50px;\">\r\n        <div slot=\"header\"><span>动态编辑标签</span></div>\r\n        <el-row>\r\n          <div>\r\n            <el-tag\r\n              :key=\"tag\"\r\n              v-for=\"tag in dynamicTags\"\r\n              closable\r\n              :disable-transitions=\"false\"\r\n              @close=\"handleClose(tag)\"\r\n            >\r\n              {{ tag }}\r\n            </el-tag>\r\n            <el-input\r\n              class=\"input-new-tag\"\r\n              v-model=\"inputValue\"\r\n              v-if=\"inputVisible\"\r\n              ref=\"saveTagInput\"\r\n              size=\"small\"\r\n              @keyup.enter.native=\"handleInputConfirm\"\r\n              @blur=\"handleInputConfirm\"\r\n            >\r\n            </el-input>\r\n            <i v-else class=\"el-icon-circle-plus button-new-tag\" @click=\"showInput\"></i>\r\n            <!-- <el-button  class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button> -->\r\n          </div>\r\n        </el-row>\r\n        <el-collapse class=\"test\" style=\"color:red;\">\r\n          <el-collapse-item title=\"查看代码\" name=\"2\">\r\n            <div style=\"white-space: pre-wrap;\">{{ dynamic }}</div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </el-card>\r\n\r\n      <el-card style=\"margin-bottom:50px;\">\r\n        <div slot=\"header\"><span>不同尺寸</span></div>\r\n        <el-row>\r\n          <div>\r\n            <el-tag closable>默认标签</el-tag>\r\n            <el-tag size=\"medium\" closable>中等标签</el-tag>\r\n            <el-tag size=\"small\" closable>小型标签</el-tag>\r\n            <el-tag size=\"mini\" closable>超小标签</el-tag>\r\n          </div>\r\n        </el-row>\r\n        <el-collapse>\r\n          <el-collapse-item title=\"查看代码\" name=\"2\">\r\n            <div style=\"white-space: pre-wrap;\">{{ size }}</div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </el-card>\r\n\r\n      <el-card style=\"margin-bottom:50px;\">\r\n        <div slot=\"header\"><span>不同主题,通过设置effect属性来改变主题，默认为 light</span></div>\r\n        <el-row>\r\n          <div class=\"block\">\r\n            <span class=\"demonstration\">Dark主题</span>\r\n            <div class=\"tag-group\">\r\n              <el-tag v-for=\"item in items\" :key=\"item.label\" :type=\"item.type\" effect=\"dark\">\r\n                {{ item.label }}\r\n              </el-tag>\r\n            </div>\r\n          </div>\r\n          <div class=\"block\">\r\n            <span class=\"demonstration\">Plain主题</span>\r\n            <div class=\"tag-group\">\r\n              <el-tag v-for=\"item in items\" :key=\"item.label\" :type=\"item.type\" effect=\"plain\">\r\n                {{ item.label }}\r\n              </el-tag>\r\n            </div>\r\n          </div>\r\n        </el-row>\r\n\r\n        <el-collapse>\r\n          <el-collapse-item title=\"查看代码\" name=\"2\">\r\n            <div style=\"white-space: pre-wrap;\">{{ theme }}</div>\r\n          </el-collapse-item>\r\n        </el-collapse>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: '',\r\n  components: {},\r\n  data() {\r\n    return {\r\n      items: [\r\n        { type: '', label: '标签一' },\r\n        { type: 'success', label: '标签二' },\r\n        { type: 'info', label: '标签三' },\r\n        { type: 'danger', label: '标签四' },\r\n        { type: 'warning', label: '标签五' },\r\n      ],\r\n      dynamicTags: ['标签一', '标签二', '标签三'],\r\n      inputVisible: false,\r\n      inputValue: '',\r\n      tags: [\r\n        { name: '标签一', type: '' },\r\n        { name: '标签二', type: 'success' },\r\n        { name: '标签三', type: 'info' },\r\n        { name: '标签四', type: 'warning' },\r\n        { name: '标签五', type: 'danger' },\r\n      ],\r\n      text: '',\r\n      /* eslint-disable */\r\n      base: `     \r\n        <el-tag>标签一</el-tag>\r\n        <el-tag type=\"success\">标签二</el-tag>\r\n        <el-tag type=\"info\">标签三</el-tag>\r\n        <el-tag type=\"warning\">标签四</el-tag>\r\n        <el-tag type=\"danger\">标签五</el-tag>`,\r\n      closable: `\r\n       <el-tag\r\n        v-for=\"tag in tags\"\r\n        :key=\"tag.name\"\r\n        closable\r\n        @close=\"handleCloseTag(tag)\"\r\n        :type=\"tag.type\">\r\n        {{tag.name}}\r\n      </el-tag>\r\n\r\n      <script>\r\n        export default {\r\n          data() {\r\n            return {\r\n              tags: [\r\n                { name: '标签一', type: '' },\r\n                { name: '标签二', type: 'success' },\r\n                { name: '标签三', type: 'info' },\r\n                { name: '标签四', type: 'warning' },\r\n                { name: '标签五', type: 'danger' }\r\n              ]\r\n            };\r\n          methods: {\r\n            handleCloseTag(tag) {\r\n              this.tags.splice(this.tags.indexOf(tag), 1);\r\n            },\r\n          }\r\n        }\r\n      <\\/script>`,\r\n      dynamic: `\r\n           <el-tag\r\n            :key=\"tag\"\r\n            v-for=\"tag in dynamicTags\"\r\n            closable\r\n            :disable-transitions=\"false\"\r\n            @close=\"handleClose(tag)\">\r\n            {{tag}}\r\n          </el-tag>\r\n          <el-input\r\n            class=\"input-new-tag\"\r\n            v-if=\"inputVisible\"\r\n            v-model=\"inputValue\"\r\n            ref=\"saveTagInput\"\r\n            size=\"small\"\r\n            @keyup.enter.native=\"handleInputConfirm\"\r\n            @blur=\"handleInputConfirm\"\r\n          >\r\n          </el-input>\r\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\r\n\r\n          <style>\r\n            .el-tag + .el-tag {\r\n              margin-left: 10px;\r\n            }\r\n            .button-new-tag {\r\n              margin-left: 10px;\r\n              height: 32px;\r\n              line-height: 30px;\r\n              padding-top: 0;\r\n              padding-bottom: 0;\r\n            }\r\n            .input-new-tag {\r\n              width: 90px;\r\n              margin-left: 10px;\r\n              vertical-align: bottom;\r\n            }\r\n            .input-new-tag /deep/ .el-input__inner {\r\n              height: 24px;\r\n            }\r\n          </style>\r\n\r\n          <script>\r\n            export default {\r\n              data() {\r\n                return {\r\n                  dynamicTags: ['标签一', '标签二', '标签三'],\r\n                  inputVisible: false,\r\n                  inputValue: ''\r\n                };\r\n              },\r\n              methods: {\r\n                handleClose(tag) {\r\n                  this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\r\n                },\r\n\r\n                showInput() {\r\n                  this.inputVisible = true;\r\n                  this.$nextTick(_ => {\r\n                    this.$refs.saveTagInput.$refs.input.focus();\r\n                  });\r\n                },\r\n\r\n                handleInputConfirm() {\r\n                  let inputValue = this.inputValue;\r\n                  if (inputValue) {\r\n                    this.dynamicTags.push(inputValue);\r\n                  }\r\n                  this.inputVisible = false;\r\n                  this.inputValue = '';\r\n                }\r\n              }\r\n            }\r\n          <\\/script>`,\r\n      size: `\r\n            <el-tag closable>默认标签</el-tag>\r\n            <el-tag size=\"medium\" closable>中等标签</el-tag>\r\n            <el-tag size=\"small\" closable>小型标签</el-tag>\r\n            <el-tag size=\"mini\" closable>超小标签</el-tag>\r\n            `,\r\n      theme: `<div class=\"tag-group\">\r\n              <span class=\"tag-group__title\">Dark</span>\r\n              <el-tag\r\n                v-for=\"item in items\"\r\n                :key=\"item.label\"\r\n                :type=\"item.type\"\r\n                effect=\"dark\">\r\n                {{ item.label }}\r\n              </el-tag>\r\n            </div>\r\n            <div class=\"tag-group\">\r\n              <span class=\"tag-group__title\">Plain</span>\r\n              <el-tag\r\n                v-for=\"item in items\"\r\n                :key=\"item.label\"\r\n                :type=\"item.type\"\r\n                effect=\"plain\">\r\n                {{ item.label }}\r\n              </el-tag>\r\n            </div>\r\n\r\n            <script>\r\n              export default {\r\n                data() {\r\n                  return {\r\n                    items: [\r\n                      { type: '', label: '标签一' },\r\n                      { type: 'success', label: '标签二' },\r\n                      { type: 'info', label: '标签三' },\r\n                      { type: 'danger', label: '标签四' },\r\n                      { type: 'warning', label: '标签五' }\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            <\\/script>`,\r\n    }\r\n  },\r\n  // 计算属性设置\r\n  computed: {},\r\n  // 数据变更监听\r\n  watch: {},\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    handleInputConfirm() {\r\n      let inputValue = this.inputValue\r\n      if (inputValue) {\r\n        this.dynamicTags.push(inputValue)\r\n      }\r\n      this.inputVisible = false\r\n      this.inputValue = ''\r\n    },\r\n    handleCloseTag(tag) {\r\n      this.tags.splice(this.tags.indexOf(tag), 1)\r\n    },\r\n    handleClose(tag) {\r\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\r\n    },\r\n    showInput() {\r\n      this.inputVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    // 执行获取数据等初始化动作\r\n    init() {},\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../../assets/style/container.scss';\r\n.block {\r\n  padding: 30px 0;\r\n  text-align: center;\r\n  border-right: 1px solid #eff2f6;\r\n  display: inline-block;\r\n  width: 49%;\r\n  box-sizing: border-box;\r\n\r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n}\r\n\r\n.demonstration {\r\n  display: block;\r\n  color: #8492a6;\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n}\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n.button-new-tag {\r\n  cursor: pointer;\r\n  vertical-align: middle;\r\n  color: #3963bc;\r\n  margin-left: 10px;\r\n  font-size: 24px;\r\n  height: 24px;\r\n  line-height: 24px;\r\n}\r\n.input-new-tag {\r\n  width: 90px;\r\n  margin-left: 10px;\r\n  vertical-align: bottom;\r\n}\r\n.input-new-tag /deep/ .el-input__inner {\r\n  height: 24px;\r\n}\r\n</style>\r\n"]}]}