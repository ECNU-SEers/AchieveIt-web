{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserPassword.vue","mtime":1584099524340},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Admin from '@/sys/models/admin'\r\n\r\nexport default {\r\n  props: ['id'],\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.confirm_password !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.new_password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loading: false,\r\n      form: {\r\n        new_password: '',\r\n        confirm_password: '',\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        new_password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    // 提交表单\r\n    submitForm(formName) {\r\n      if (this.form.new_password === '' && this.form.confirm_password === '') {\r\n        this.$emit('handlePasswordResult', true)\r\n        return\r\n      }\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          let res\r\n          try {\r\n            this.loading = true\r\n            res = await Admin.changePassword(this.form.new_password, this.form.confirm_password, this.id) // eslint-disable-line\r\n          } catch (e) {\r\n            this.loading = false\r\n            console.log(e)\r\n          }\r\n          if (res.code < window.SUCCESS_CODE) {\r\n            this.loading = false\r\n            this.$message.success(`${res.message}`)\r\n            this.resetForm(formName)\r\n            this.$emit('handlePasswordResult', true)\r\n          } else {\r\n            this.loading = false\r\n            this.$message.error(`${res.message}`)\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n          this.$emit('handlePasswordResult', false)\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["UserPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserPassword.vue","sourceRoot":"src/views/admin/user","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-form\r\n      :model=\"form\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      label-position=\"right\"\r\n      ref=\"form\"\r\n      v-loading=\"loading\"\r\n      label-width=\"100px\"\r\n    >\r\n      <el-form-item label=\"密码\" prop=\"new_password\">\r\n        <el-input size=\"medium\" clearable type=\"password\" v-model=\"form.new_password\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"confirm_password\" label-position=\"top\">\r\n        <el-input size=\"medium\" clearable type=\"password\" v-model=\"form.confirm_password\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-show=\"false\">\r\n        <el-button type=\"primary\" @click=\"submitForm('form')\">保存</el-button>\r\n        <el-button @click=\"resetForm('form')\">取消</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Admin from '@/sys/models/admin'\r\n\r\nexport default {\r\n  props: ['id'],\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.confirm_password !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.new_password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loading: false,\r\n      form: {\r\n        new_password: '',\r\n        confirm_password: '',\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        new_password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    // 提交表单\r\n    submitForm(formName) {\r\n      if (this.form.new_password === '' && this.form.confirm_password === '') {\r\n        this.$emit('handlePasswordResult', true)\r\n        return\r\n      }\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          let res\r\n          try {\r\n            this.loading = true\r\n            res = await Admin.changePassword(this.form.new_password, this.form.confirm_password, this.id) // eslint-disable-line\r\n          } catch (e) {\r\n            this.loading = false\r\n            console.log(e)\r\n          }\r\n          if (res.code < window.SUCCESS_CODE) {\r\n            this.loading = false\r\n            this.$message.success(`${res.message}`)\r\n            this.resetForm(formName)\r\n            this.$emit('handlePasswordResult', true)\r\n          } else {\r\n            this.loading = false\r\n            this.$message.error(`${res.message}`)\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n          this.$emit('handlePasswordResult', false)\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}