{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserInfo.vue","mtime":1584099524339},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Admin from '@/sys/models/admin'\r\nimport User from '@/sys/models/user'\r\n\r\nexport default {\r\n  props: {\r\n    submit: {\r\n      type: Boolean, // 表单是否显示功能按钮\r\n      default: true,\r\n    },\r\n    id: {\r\n      // 用户id\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n    groups: {\r\n      // 所有角色\r\n      type: Array,\r\n      default: () => {},\r\n    },\r\n    labelPosition: {\r\n      // 表单label位置\r\n      type: String,\r\n      default: 'right',\r\n    },\r\n    info: {\r\n      // 用户信息\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    pageType: {\r\n      type: String,\r\n      default: 'add', // 区分编辑页面/添加页面\r\n    },\r\n  },\r\n  inject: ['eventBus'],\r\n  data() {\r\n    // 验证回调函数\r\n    const checkUserName = (rule, value, callback) => {\r\n      // eslint-disable-line\r\n      if (!value) {\r\n        callback(new Error('用户名不能为空'))\r\n      }\r\n      callback()\r\n    }\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.checkPassword !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loading: false, // 加载动画\r\n      isEdited: false, // 能否编辑\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        email: '',\r\n        group_ids: [],\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        username: [\r\n          {\r\n            validator: checkUserName,\r\n            trigger: ['blur', 'change'],\r\n            required: true,\r\n          },\r\n        ],\r\n        password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n        email: [\r\n          {\r\n            type: 'email',\r\n            message: '请输入正确的邮箱地址或者不填',\r\n            trigger: ['blur', 'change'],\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    // 提交表单\r\n    async submitForm(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          // 新增用户\r\n          let res\r\n          if (this.pageType === 'add') {\r\n            try {\r\n              this.loading = true\r\n              res = await User.register(this.form)\r\n              if (res.code < window.SUCCESS_CODE) {\r\n                this.loading = false\r\n                this.$message.success(`${res.message}`)\r\n                this.eventBus.$emit('addUser', true)\r\n                this.resetForm(formName)\r\n              }\r\n            } catch (e) {\r\n              this.loading = false\r\n              this.$message.error('新增用户失败')\r\n              console.log(e)\r\n            }\r\n          } else {\r\n            // 更新用户信息\r\n            if (\r\n              this.form.email === this.info.email\r\n              && this.form.group_ids.sort().toString() === this.info.group_ids.sort().toString()\r\n            ) {\r\n              this.$emit('handleInfoResult', false)\r\n              return\r\n            }\r\n            try {\r\n              this.loading = true\r\n              res = await Admin.updateOneUser(this.form.email, this.form.group_ids, this.id)\r\n            } catch (e) {\r\n              this.loading = false\r\n              console.log(e)\r\n            }\r\n            if (res.code < window.SUCCESS_CODE) {\r\n              this.loading = false\r\n              this.$message.success(`${res.message}`)\r\n              this.$emit('handleInfoResult', true)\r\n            } else {\r\n              this.loading = false\r\n              this.$message.error(`${res.message}`)\r\n            }\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      if (this.pageType === 'edit') {\r\n        this.setInfo()\r\n      } else {\r\n        this.form.group_ids = [this.groups[0].id]\r\n        this.$refs[formName].resetFields()\r\n      }\r\n    },\r\n    setInfo() {\r\n      this.form.username = this.info.username\r\n      this.form.email = this.info.email\r\n      const temp = []\r\n      this.info.group_ids.forEach(item => {\r\n        temp.push(item.id)\r\n      })\r\n      this.form.group_ids = temp\r\n    },\r\n  },\r\n  // watch: {\r\n  //   groups: {\r\n  //     // 默认选中管理员组\r\n  //     handler() {\r\n  //       if (this.groups && this.groups[0] && this.groups[0].id) {\r\n  //         this.form.group_ids = [this.groups[0].id]\r\n  //       }\r\n  //     },\r\n  //     immediate: true,\r\n  //   },\r\n  // },\r\n  created() {\r\n    // 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\r\n    if (this.pageType === 'edit') {\r\n      this.setInfo()\r\n      this.isEdited = true\r\n    }\r\n  },\r\n}\r\n",{"version":3,"sources":["UserInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserInfo.vue","sourceRoot":"src/views/admin/user","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-form\r\n      :model=\"form\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      :label-position=\"labelPosition\"\r\n      ref=\"form\"\r\n      v-loading=\"loading\"\r\n      label-width=\"100px\"\r\n      @submit.native.prevent\r\n    >\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input size=\"medium\" clearable v-model=\"form.username\" :disabled=\"isEdited\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input\r\n          size=\"medium\"\r\n          clearable\r\n          v-model=\"form.email\"\r\n          :disabled=\"isEdited\"\r\n          auto-complete=\"new-password\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"pageType === 'add'\" label=\"密码\" prop=\"password\">\r\n        <el-input\r\n          size=\"medium\"\r\n          clearable\r\n          type=\"password\"\r\n          v-model=\"form.password\"\r\n          auto-complete=\"new-password\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"pageType === 'add'\" label=\"确认密码\" prop=\"confirm_password\" label-position=\"top\">\r\n        <el-input size=\"medium\" clearable type=\"password\" v-model=\"form.confirm_password\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"pageType !== 'password'\" label=\"选择角色\">\r\n        <!-- <el-select\r\n          size=\"medium\"\r\n          multiple\r\n          v-model=\"form.group_ids\"\r\n          :disabled=\"groups.length === 0\"\r\n          placeholder=\"请选择角色\"\r\n        >\r\n          <el-option v-for=\"item in groups\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"> </el-option>\r\n        </el-select> -->\r\n        <el-checkbox-group v-model=\"form.group_ids\" size=\"small\" style=\"transform: translateY(5px);\">\r\n          <el-checkbox v-for=\"item in groups\" :key=\"item.id\" :label=\"item.id\" border style=\"margin-left: 0\">{{\r\n            item.name\r\n          }}</el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-form-item>\r\n      <el-form-item v-show=\"submit\" class=\"submit\">\r\n        <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\r\n        <el-button @click=\"resetForm('form')\">重 置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Admin from '@/sys/models/admin'\r\nimport User from '@/sys/models/user'\r\n\r\nexport default {\r\n  props: {\r\n    submit: {\r\n      type: Boolean, // 表单是否显示功能按钮\r\n      default: true,\r\n    },\r\n    id: {\r\n      // 用户id\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n    groups: {\r\n      // 所有角色\r\n      type: Array,\r\n      default: () => {},\r\n    },\r\n    labelPosition: {\r\n      // 表单label位置\r\n      type: String,\r\n      default: 'right',\r\n    },\r\n    info: {\r\n      // 用户信息\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    pageType: {\r\n      type: String,\r\n      default: 'add', // 区分编辑页面/添加页面\r\n    },\r\n  },\r\n  inject: ['eventBus'],\r\n  data() {\r\n    // 验证回调函数\r\n    const checkUserName = (rule, value, callback) => {\r\n      // eslint-disable-line\r\n      if (!value) {\r\n        callback(new Error('用户名不能为空'))\r\n      }\r\n      callback()\r\n    }\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.checkPassword !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loading: false, // 加载动画\r\n      isEdited: false, // 能否编辑\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        email: '',\r\n        group_ids: [],\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        username: [\r\n          {\r\n            validator: checkUserName,\r\n            trigger: ['blur', 'change'],\r\n            required: true,\r\n          },\r\n        ],\r\n        password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n        email: [\r\n          {\r\n            type: 'email',\r\n            message: '请输入正确的邮箱地址或者不填',\r\n            trigger: ['blur', 'change'],\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    // 提交表单\r\n    async submitForm(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          // 新增用户\r\n          let res\r\n          if (this.pageType === 'add') {\r\n            try {\r\n              this.loading = true\r\n              res = await User.register(this.form)\r\n              if (res.code < window.SUCCESS_CODE) {\r\n                this.loading = false\r\n                this.$message.success(`${res.message}`)\r\n                this.eventBus.$emit('addUser', true)\r\n                this.resetForm(formName)\r\n              }\r\n            } catch (e) {\r\n              this.loading = false\r\n              this.$message.error('新增用户失败')\r\n              console.log(e)\r\n            }\r\n          } else {\r\n            // 更新用户信息\r\n            if (\r\n              this.form.email === this.info.email\r\n              && this.form.group_ids.sort().toString() === this.info.group_ids.sort().toString()\r\n            ) {\r\n              this.$emit('handleInfoResult', false)\r\n              return\r\n            }\r\n            try {\r\n              this.loading = true\r\n              res = await Admin.updateOneUser(this.form.email, this.form.group_ids, this.id)\r\n            } catch (e) {\r\n              this.loading = false\r\n              console.log(e)\r\n            }\r\n            if (res.code < window.SUCCESS_CODE) {\r\n              this.loading = false\r\n              this.$message.success(`${res.message}`)\r\n              this.$emit('handleInfoResult', true)\r\n            } else {\r\n              this.loading = false\r\n              this.$message.error(`${res.message}`)\r\n            }\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      if (this.pageType === 'edit') {\r\n        this.setInfo()\r\n      } else {\r\n        this.form.group_ids = [this.groups[0].id]\r\n        this.$refs[formName].resetFields()\r\n      }\r\n    },\r\n    setInfo() {\r\n      this.form.username = this.info.username\r\n      this.form.email = this.info.email\r\n      const temp = []\r\n      this.info.group_ids.forEach(item => {\r\n        temp.push(item.id)\r\n      })\r\n      this.form.group_ids = temp\r\n    },\r\n  },\r\n  // watch: {\r\n  //   groups: {\r\n  //     // 默认选中管理员组\r\n  //     handler() {\r\n  //       if (this.groups && this.groups[0] && this.groups[0].id) {\r\n  //         this.form.group_ids = [this.groups[0].id]\r\n  //       }\r\n  //     },\r\n  //     immediate: true,\r\n  //   },\r\n  // },\r\n  created() {\r\n    // 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\r\n    if (this.pageType === 'edit') {\r\n      this.setInfo()\r\n      this.isEdited = true\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  margin-top: 20px;\r\n  margin-left: -5px;\r\n  max-width: 800px;\r\n\r\n  .submit {\r\n    float: left;\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n// .el-radio-role {\r\n//   &.user-info {\r\n//     display: flex;\r\n//     flex-wrap: wrap;\r\n//     > .el-radio {\r\n//       width: 150px;\r\n//       margin-left: 0px !important;\r\n//       margin-right: 10px;\r\n//       margin-bottom: 20px;\r\n//       white-space: normal;\r\n//       display: flex;\r\n//     }\r\n//   }\r\n// }\r\n</style>\r\n"]}]}