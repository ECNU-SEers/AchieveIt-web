{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\center\\Center.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\center\\Center.vue","mtime":1584099524341},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport Vue from 'vue'\r\nimport Croppa from 'vue-croppa'\r\nimport User from '@/sys/models/user'\r\nimport 'vue-croppa/dist/vue-croppa.css'\r\nimport defaultAvatar from '@/assets/img/user/user.png'\r\n\r\nVue.use(Croppa)\r\n\r\nconst width = 150\r\nconst height = 150\r\n\r\nexport default {\r\n  name: 'center',\r\n  components: {},\r\n  data() {\r\n    const oldPassword = (rule, value, callback) => {\r\n      // eslint-disable-line\r\n      if (!value) {\r\n        return callback(new Error('原始密码不能为空'))\r\n      }\r\n      callback()\r\n    }\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.checkPassword !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.new_password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      username: null,\r\n      nickname: null,\r\n      form: {\r\n        old_password: '',\r\n        new_password: '',\r\n        confirm_password: '',\r\n      },\r\n      rules: {\r\n        old_password: [{ validator: oldPassword, trigger: 'blur', required: true }],\r\n        new_password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n      },\r\n      cropRule: {\r\n        width,\r\n        height,\r\n      },\r\n      imgRule: {\r\n        minWidth: width,\r\n        minHeight: height,\r\n      },\r\n      cropVisible: false,\r\n      cropImg: '',\r\n      croppa: {},\r\n      imgInfo: null,\r\n      quality: 1,\r\n      defaultAvatar,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['user']),\r\n  },\r\n  watch: {\r\n    cropVisible(val) {\r\n      if (!val) {\r\n        this.$refs.croppa.remove()\r\n        this.cropImg = ''\r\n        this.imgInfo = null\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    ...mapActions(['loginOut', 'setUserAndState']),\r\n    fileChange(evt) {\r\n      if (evt.target.files.length !== 1) {\r\n        return\r\n      }\r\n      const imgFile = evt.target.files[0]\r\n      // 验证文件大小是否符合要求, 不大于 5M\r\n      if (imgFile.size > 1024 * 1024 * 5) {\r\n        this.$message.error('文件过大超过5M')\r\n        // 清空输入框\r\n        this.clearFileInput(this.$refs.avatarInput)\r\n        return\r\n      }\r\n\r\n      // 验证图像是否符合要求\r\n      const imgSrc = window.URL.createObjectURL(imgFile)\r\n      const image = new Image()\r\n      image.src = imgSrc\r\n      image.onload = () => {\r\n        const w = image.width\r\n        const h = image.height\r\n        if (w < 50) {\r\n          this.$message.error('图像宽度过小, 请选择大于50px的图像')\r\n          // 清空输入框\r\n          this.clearFileInput(this.$refs.avatarInput)\r\n          return\r\n        }\r\n        if (h < 50) {\r\n          this.$message.error('图像高度过小, 请选择大于50px的图像')\r\n          // 清空输入框\r\n          this.clearFileInput(this.$refs.avatarInput)\r\n          return\r\n        }\r\n        // 验证通过, 打开裁剪框\r\n        this.cropImg = imgSrc\r\n        this.cropVisible = true\r\n        if (this.$refs.croppa) {\r\n          this.$refs.croppa.refresh()\r\n        }\r\n      }\r\n      image.onerror = () => {\r\n        this.$message.error('获取本地图片出现错误, 请重试')\r\n        // 清空输入框\r\n        this.clearFileInput(this.$refs.avatarInput)\r\n      }\r\n    },\r\n    async handleCrop() {\r\n      // 获取裁剪数据\r\n      const blob = await this.$refs.croppa.promisedBlob('image/jpeg', 0.8)\r\n      // 构造为文件对象\r\n      const file = new File([blob], 'avatar.jpg', {\r\n        type: 'image/jpeg',\r\n      })\r\n\r\n      return this.$axios({\r\n        method: 'post',\r\n        url: '/cms/file',\r\n        data: {\r\n          file,\r\n        },\r\n      }).then(res => {\r\n        // 清空输入框\r\n        this.clearFileInput(this.$refs.avatarInput)\r\n        if (!Array.isArray(res) || res.length !== 1) {\r\n          this.$message.error('头像上传失败, 请重试')\r\n          return false\r\n        }\r\n        // TODO: 错误码处理\r\n        // if (res.code === 10110) {\r\n        //   throw new Error('文件体积过大')\r\n        // }\r\n        return this.$axios({\r\n          method: 'put',\r\n          url: '/cms/user',\r\n          data: {\r\n            avatar: res[0].path,\r\n          },\r\n        })\r\n          .then(putRes => {\r\n            // eslint-disable-line\r\n            if (putRes.code < window.SUCCESS_CODE) {\r\n              this.$message({\r\n                type: 'success',\r\n                message: '更新头像成功',\r\n              })\r\n              this.cropVisible = false\r\n              // 触发重新获取用户信息\r\n              return User.getInformation()\r\n            }\r\n            return Promise.reject(new Error('更新头像失败'))\r\n          })\r\n          .then(infoRes => {\r\n            // eslint-disable-line\r\n            // 尝试获取当前用户信息\r\n            const user = infoRes\r\n            this.setUserAndState(user)\r\n          })\r\n      })\r\n    },\r\n    async blur() {\r\n      if (this.nickname) {\r\n        const { user } = this.$store.state\r\n        if (this.nickname !== user.nickname && this.nickname !== '佚名') {\r\n          this.$axios({\r\n            method: 'put',\r\n            url: '/cms/user',\r\n            data: {\r\n              nickname: this.nickname,\r\n            },\r\n            showBackend: true,\r\n          })\r\n            .then(res => {\r\n              if (res.code < window.SUCCESS_CODE) {\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: '更新昵称成功',\r\n                })\r\n                // 触发重新获取用户信息\r\n                return User.getInformation()\r\n              }\r\n            })\r\n            .then(res => {\r\n              // eslint-disable-line\r\n              this.setUserAndState(res)\r\n              this.nickname = res.nickname\r\n            })\r\n        }\r\n      }\r\n      this.nicknameChanged = false\r\n    },\r\n    init() {\r\n      const { user } = this.$store.state\r\n      this.nickname = user && user.nickname ? user.nickname : '佚名'\r\n    },\r\n    goToCenter() {\r\n      this.$router.push('/center')\r\n    },\r\n    submitForm(formName) {\r\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\r\n        this.dialogFormVisible = false\r\n        return\r\n      }\r\n      if (this.form.old_password === this.form.new_password) {\r\n        this.$message.error('新密码不能与原始密码一样')\r\n        return\r\n      }\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          const res = await User.updatePassword(this.form)\r\n          if (res.code < window.SUCCESS_CODE) {\r\n            this.$message.success(`${res.message}`)\r\n            this.resetForm(formName)\r\n            this.dialogFormVisible = false\r\n            setTimeout(() => {\r\n              this.loginOut()\r\n              const { origin } = window.location\r\n              window.location.href = origin\r\n            }, 1000)\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    clearFileInput(ele) {\r\n      // eslint-disable-next-line\r\n      ele.value = ''\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["Center.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Center.vue","sourceRoot":"src/views/center","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"title\">个人中心</div>\r\n    <div class=\"wrap\">\r\n      <el-row>\r\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\r\n          <div class=\"user\">\r\n            <div class=\"title\">用户信息</div>\r\n            <div class=\"content\">\r\n              <div class=\"name-wrapper\">\r\n                <div class=\"label\">昵称</div>\r\n                <div class=\"name\">\r\n                  <el-input\r\n                    placeholder=\"请输入内容\"\r\n                    size=\"small\"\r\n                    v-model=\"nickname\"\r\n                    suffix-icon=\"el-icon-edit\"\r\n                    ref=\"input\"\r\n                    @blur=\"blur\"\r\n                  ></el-input>\r\n                </div>\r\n              </div>\r\n              <div class=\"avatar\" title=\"点击修改头像\">\r\n                <img :src=\"user.avatar || defaultAvatar\" alt=\"头像\" />\r\n                <label class=\"mask\">\r\n                  <i class=\"iconfont icon-icon-test\" style=\"font-size: 20px;\"></i>\r\n                  <input ref=\"avatarInput\" type=\"file\" accept=\"image/*\" @change=\"fileChange\" />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"password\">\r\n            <div class=\"title\">修改密码</div>\r\n            <el-form\r\n              :model=\"form\"\r\n              status-icon\r\n              :rules=\"rules\"\r\n              label-position=\"left\"\r\n              ref=\"form\"\r\n              label-width=\"90px\"\r\n              @submit.native.prevent\r\n            >\r\n              <el-form-item label=\"原始密码\" prop=\"old_password\">\r\n                <el-input type=\"password\" v-model=\"form.old_password\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"新密码\" prop=\"new_password\">\r\n                <el-input type=\"password\" v-model=\"form.new_password\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"确认密码\" prop=\"confirm_password\" label-position=\"top\">\r\n                <el-input type=\"password\" v-model=\"form.confirm_password\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('form')\">保存</el-button>\r\n                <el-button @click=\"resetForm('form')\">重置</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n    <!-- 修改头像 -->\r\n    <el-dialog\r\n      title=\"裁剪\"\r\n      :visible.sync=\"cropVisible\"\r\n      width=\"300px\"\r\n      :append-to-body=\"true\"\r\n      :close-on-click-modal=\"false\"\r\n      custom-class=\"croppa-dialog\"\r\n      center\r\n    >\r\n      <div style=\"text-align: center;\">\r\n        <div class=\"avatar-croppa-container\">\r\n          <croppa\r\n            ref=\"croppa\"\r\n            :width=\"cropRule.width\"\r\n            :height=\"cropRule.height\"\r\n            :placeholder=\"'loading'\"\r\n            :zoom-speed=\"30\"\r\n            :disable-drag-and-drop=\"false\"\r\n            :show-remove-button=\"false\"\r\n            :prevent-white-space=\"true\"\r\n            :disable-click-to-choose=\"false\"\r\n            :disable-scroll-to-zoom=\"false\"\r\n            :show-loading=\"true\"\r\n            :quality=\"quality\"\r\n            :initial-image=\"cropImg\"\r\n          ></croppa>\r\n        </div>\r\n        <div style=\"margin-top: 1em;\">通过鼠标滚轮调节头像大小</div>\r\n      </div>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"cropVisible = false\" size=\"small\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleCrop\" size=\"small\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport Vue from 'vue'\r\nimport Croppa from 'vue-croppa'\r\nimport User from '@/sys/models/user'\r\nimport 'vue-croppa/dist/vue-croppa.css'\r\nimport defaultAvatar from '@/assets/img/user/user.png'\r\n\r\nVue.use(Croppa)\r\n\r\nconst width = 150\r\nconst height = 150\r\n\r\nexport default {\r\n  name: 'center',\r\n  components: {},\r\n  data() {\r\n    const oldPassword = (rule, value, callback) => {\r\n      // eslint-disable-line\r\n      if (!value) {\r\n        return callback(new Error('原始密码不能为空'))\r\n      }\r\n      callback()\r\n    }\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.checkPassword !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.new_password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      username: null,\r\n      nickname: null,\r\n      form: {\r\n        old_password: '',\r\n        new_password: '',\r\n        confirm_password: '',\r\n      },\r\n      rules: {\r\n        old_password: [{ validator: oldPassword, trigger: 'blur', required: true }],\r\n        new_password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n      },\r\n      cropRule: {\r\n        width,\r\n        height,\r\n      },\r\n      imgRule: {\r\n        minWidth: width,\r\n        minHeight: height,\r\n      },\r\n      cropVisible: false,\r\n      cropImg: '',\r\n      croppa: {},\r\n      imgInfo: null,\r\n      quality: 1,\r\n      defaultAvatar,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['user']),\r\n  },\r\n  watch: {\r\n    cropVisible(val) {\r\n      if (!val) {\r\n        this.$refs.croppa.remove()\r\n        this.cropImg = ''\r\n        this.imgInfo = null\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    ...mapActions(['loginOut', 'setUserAndState']),\r\n    fileChange(evt) {\r\n      if (evt.target.files.length !== 1) {\r\n        return\r\n      }\r\n      const imgFile = evt.target.files[0]\r\n      // 验证文件大小是否符合要求, 不大于 5M\r\n      if (imgFile.size > 1024 * 1024 * 5) {\r\n        this.$message.error('文件过大超过5M')\r\n        // 清空输入框\r\n        this.clearFileInput(this.$refs.avatarInput)\r\n        return\r\n      }\r\n\r\n      // 验证图像是否符合要求\r\n      const imgSrc = window.URL.createObjectURL(imgFile)\r\n      const image = new Image()\r\n      image.src = imgSrc\r\n      image.onload = () => {\r\n        const w = image.width\r\n        const h = image.height\r\n        if (w < 50) {\r\n          this.$message.error('图像宽度过小, 请选择大于50px的图像')\r\n          // 清空输入框\r\n          this.clearFileInput(this.$refs.avatarInput)\r\n          return\r\n        }\r\n        if (h < 50) {\r\n          this.$message.error('图像高度过小, 请选择大于50px的图像')\r\n          // 清空输入框\r\n          this.clearFileInput(this.$refs.avatarInput)\r\n          return\r\n        }\r\n        // 验证通过, 打开裁剪框\r\n        this.cropImg = imgSrc\r\n        this.cropVisible = true\r\n        if (this.$refs.croppa) {\r\n          this.$refs.croppa.refresh()\r\n        }\r\n      }\r\n      image.onerror = () => {\r\n        this.$message.error('获取本地图片出现错误, 请重试')\r\n        // 清空输入框\r\n        this.clearFileInput(this.$refs.avatarInput)\r\n      }\r\n    },\r\n    async handleCrop() {\r\n      // 获取裁剪数据\r\n      const blob = await this.$refs.croppa.promisedBlob('image/jpeg', 0.8)\r\n      // 构造为文件对象\r\n      const file = new File([blob], 'avatar.jpg', {\r\n        type: 'image/jpeg',\r\n      })\r\n\r\n      return this.$axios({\r\n        method: 'post',\r\n        url: '/cms/file',\r\n        data: {\r\n          file,\r\n        },\r\n      }).then(res => {\r\n        // 清空输入框\r\n        this.clearFileInput(this.$refs.avatarInput)\r\n        if (!Array.isArray(res) || res.length !== 1) {\r\n          this.$message.error('头像上传失败, 请重试')\r\n          return false\r\n        }\r\n        // TODO: 错误码处理\r\n        // if (res.code === 10110) {\r\n        //   throw new Error('文件体积过大')\r\n        // }\r\n        return this.$axios({\r\n          method: 'put',\r\n          url: '/cms/user',\r\n          data: {\r\n            avatar: res[0].path,\r\n          },\r\n        })\r\n          .then(putRes => {\r\n            // eslint-disable-line\r\n            if (putRes.code < window.SUCCESS_CODE) {\r\n              this.$message({\r\n                type: 'success',\r\n                message: '更新头像成功',\r\n              })\r\n              this.cropVisible = false\r\n              // 触发重新获取用户信息\r\n              return User.getInformation()\r\n            }\r\n            return Promise.reject(new Error('更新头像失败'))\r\n          })\r\n          .then(infoRes => {\r\n            // eslint-disable-line\r\n            // 尝试获取当前用户信息\r\n            const user = infoRes\r\n            this.setUserAndState(user)\r\n          })\r\n      })\r\n    },\r\n    async blur() {\r\n      if (this.nickname) {\r\n        const { user } = this.$store.state\r\n        if (this.nickname !== user.nickname && this.nickname !== '佚名') {\r\n          this.$axios({\r\n            method: 'put',\r\n            url: '/cms/user',\r\n            data: {\r\n              nickname: this.nickname,\r\n            },\r\n            showBackend: true,\r\n          })\r\n            .then(res => {\r\n              if (res.code < window.SUCCESS_CODE) {\r\n                this.$message({\r\n                  type: 'success',\r\n                  message: '更新昵称成功',\r\n                })\r\n                // 触发重新获取用户信息\r\n                return User.getInformation()\r\n              }\r\n            })\r\n            .then(res => {\r\n              // eslint-disable-line\r\n              this.setUserAndState(res)\r\n              this.nickname = res.nickname\r\n            })\r\n        }\r\n      }\r\n      this.nicknameChanged = false\r\n    },\r\n    init() {\r\n      const { user } = this.$store.state\r\n      this.nickname = user && user.nickname ? user.nickname : '佚名'\r\n    },\r\n    goToCenter() {\r\n      this.$router.push('/center')\r\n    },\r\n    submitForm(formName) {\r\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\r\n        this.dialogFormVisible = false\r\n        return\r\n      }\r\n      if (this.form.old_password === this.form.new_password) {\r\n        this.$message.error('新密码不能与原始密码一样')\r\n        return\r\n      }\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          const res = await User.updatePassword(this.form)\r\n          if (res.code < window.SUCCESS_CODE) {\r\n            this.$message.success(`${res.message}`)\r\n            this.resetForm(formName)\r\n            this.dialogFormVisible = false\r\n            setTimeout(() => {\r\n              this.loginOut()\r\n              const { origin } = window.location\r\n              window.location.href = origin\r\n            }, 1000)\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    clearFileInput(ele) {\r\n      // eslint-disable-next-line\r\n      ele.value = ''\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  .title {\r\n    height: 59px;\r\n    line-height: 59px;\r\n    color: $parent-title-color;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    text-indent: 40px;\r\n    border-bottom: 1px solid #dae1ec;\r\n  }\r\n\r\n  .wrap {\r\n    padding: 20px;\r\n    max-width: 800px;\r\n    .user {\r\n      padding: 0px 20px 25px 30px;\r\n      z-index: 100;\r\n      position: relative;\r\n      border-bottom: 1px solid #dae1ec;\r\n      .title {\r\n        font-weight: bold;\r\n        font-size: 16px;\r\n        color: #3a3a3a;\r\n        text-indent: 0px;\r\n        border: none;\r\n      }\r\n      .content {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        .name-wrapper {\r\n          display: flex;\r\n          align-items: center;\r\n          .label {\r\n            margin-right: 20px;\r\n            color: #333;\r\n            font-weight: bold;\r\n            font-size: 14px;\r\n          }\r\n          .name {\r\n            font-weight: 500;\r\n          }\r\n        }\r\n        .avatar {\r\n          width: 80px;\r\n          height: 80px;\r\n          border-radius: 50%;\r\n          cursor: pointer;\r\n          overflow: hidden;\r\n          position: relative;\r\n\r\n          .mask {\r\n            opacity: 0;\r\n            transition: all 0.2s;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(0, 0, 0, 0.3);\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            cursor: pointer;\r\n            color: white;\r\n\r\n            input {\r\n              display: none;\r\n            }\r\n          }\r\n\r\n          &:hover {\r\n            .mask {\r\n              opacity: 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        .text {\r\n          margin-left: 20px;\r\n          color: #fff;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n\r\n          .username {\r\n            margin-bottom: 10px;\r\n            font-size: 16px;\r\n            cursor: pointer;\r\n          }\r\n\r\n          .desc {\r\n            font-size: 14px;\r\n            color: rgba(222, 226, 230, 1);\r\n          }\r\n        }\r\n\r\n        .info {\r\n          position: absolute;\r\n          bottom: 10px;\r\n          right: 10px;\r\n          display: flex;\r\n          color: #fff;\r\n          font-size: 14px;\r\n          height: 20px;\r\n          line-height: 20px;\r\n\r\n          .mid {\r\n            padding: 0 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .password {\r\n      padding: 25px 20px 25px 30px;\r\n      .title {\r\n        color: #3a3a3a;\r\n        font-weight: bold;\r\n        font-size: 16px;\r\n        text-indent: 0px;\r\n        margin-bottom: 20px;\r\n        border: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}