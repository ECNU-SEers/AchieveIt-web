{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\components\\layout\\ReuseTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\components\\layout\\ReuseTab.vue","mtime":1584099524207},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport 'swiper/dist/css/swiper.css'; // eslint-disable-line\n\nexport default {\n  components: {\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  data: function data() {\n    return {\n      histories: [],\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      swiperOption: {\n        slidesPerView: 'auto',\n        initialSlide: 0,\n        effect: 'slide',\n        spaceBetween: 1,\n        preventClicks: false,\n        freeMode: true,\n        mousewheel: {\n          sensitivity: 1.5\n        }\n      }\n    };\n  },\n  watch: {\n    $route: function $route(to) {\n      // 对路由变化作出响应...\n      var histories = this.histories;\n      var flag = histories.find(function (item) {\n        return item.path === to.path;\n      });\n\n      if (flag) {\n        return;\n      }\n\n      var ele = {};\n      ele.stageId = to.name;\n      ele.path = to.path;\n      ele.routePath = to.matched[to.matched.length - 1].path;\n      this.histories = [ele].concat(_toConsumableArray(histories));\n    },\n    logined: function logined(val) {\n      if (val) {\n        return;\n      }\n\n      this.closeAll();\n    },\n    // 舞台改变时触发\n    stageList: function stageList() {\n      this.init();\n    },\n    histories: function histories(arr) {\n      if (arr.length < 2) {\n        this.eventBus.$emit('noReuse');\n      } else {\n        this.eventBus.$emit('hasReuse');\n      }\n    }\n  },\n  inject: ['eventBus'],\n  created: function created() {\n    var _this = this;\n\n    // 关闭窗口时执行\n    window.onbeforeunload = function () {\n      // 缓存历史记录\n      window.localStorage.setItem('history', JSON.stringify(_this.histories));\n    };\n  },\n  computed: _objectSpread({\n    logined: function logined() {\n      return this.$store.state.logined;\n    },\n    defaultRoute: function defaultRoute() {\n      return this.$store.state.defaultRoute;\n    }\n  }, mapGetters(['getStageByRoute', 'getStageByName', 'stageList'])),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.init();\n    this.eventBus.$on('clearTap', function () {\n      _this2.histories = [];\n    });\n  },\n  methods: {\n    init: function init() {\n      var _this3 = this;\n\n      var histories = []; // 获取当前的历史记录, 可能从本地存储, 可能直接获取当前的\n\n      var localHistory;\n\n      if (this.histories.length > 0) {\n        localHistory = _toConsumableArray(this.histories);\n      } else {\n        localHistory = window.localStorage.getItem('history') || '[]';\n        localHistory = JSON.parse(localHistory);\n      }\n\n      localHistory.forEach(function (item) {\n        var findResult;\n\n        if (item.name) {\n          findResult = _this3.getStageByName(item.name);\n        } else {\n          findResult = _this3.getStageByRoute(item.routePath);\n        }\n\n        if (!findResult) {\n          return;\n        }\n\n        histories.push(_objectSpread({}, item, {\n          stageId: findResult.name\n        }));\n        _this3.histories = histories;\n      });\n    },\n    filterIcon: function filterIcon(icon) {\n      if (!icon) {\n        return false;\n      }\n\n      return icon.indexOf('/') !== -1;\n    },\n    closeAll: function closeAll() {\n      this.histories = [];\n      this.$router.push(this.defaultRoute);\n    },\n    close: function close(index) {\n      // 检测是否是当前页, 如果是当前页则自动切换路由\n      if (this.$route.path === this.histories[index].path) {\n        if (index > 0) {\n          this.$router.push(this.histories[index - 1].path);\n        } else if (this.histories.length > 1) {\n          this.$router.push(this.histories[1].path);\n        } else {\n          this.$router.push(this.defaultRoute);\n        }\n      } // 删除该历史记录\n\n\n      this.histories.splice(index, 1);\n      this.histories = _toConsumableArray(this.histories);\n    }\n  }\n};",{"version":3,"sources":["ReuseTab.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div v-if=\"histories.length > 1\" ref=\"resueTab\">\r\n    <swiper :options=\"swiperOption\" class=\"reuse-tab-wrap\">\r\n      <swiper-slide v-for=\"(item, index) in histories\" :key=\"item.path\">\r\n        <router-link\r\n          class=\"reuse-tab-item\"\r\n          :class=\"item.path === $route.path ? 'active' : ''\"\r\n          :to=\"item.path\"\r\n          @contextmenu.prevent.native=\"onTags\"\r\n        >\r\n          <i v-if=\"!filterIcon(stageList[item.stageId].icon)\" :class=\"stageList[item.stageId].icon\"></i>\r\n          <img v-else :src=\"stageList[item.stageId].icon\" style=\"width:16px;\" />\r\n          <span style=\"padding: 0 5px;\">{{ stageList[item.stageId].title | filterTitle }}</span>\r\n          <span class=\"el-icon-close\" @click.prevent.stop=\"close(index)\" />\r\n        </router-link>\r\n      </swiper-slide>\r\n    </swiper>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\r\n\r\nimport 'swiper/dist/css/swiper.css' // eslint-disable-line\r\n\r\nexport default {\r\n  components: { swiper, swiperSlide },\r\n  data() {\r\n    return {\r\n      histories: [],\r\n      visible: false,\r\n      top: 0,\r\n      left: 0,\r\n      selectedTag: {},\r\n      swiperOption: {\r\n        slidesPerView: 'auto',\r\n        initialSlide: 0,\r\n        effect: 'slide',\r\n        spaceBetween: 1,\r\n        preventClicks: false,\r\n        freeMode: true,\r\n        mousewheel: {\r\n          sensitivity: 1.5,\r\n        },\r\n      },\r\n    }\r\n  },\r\n  watch: {\r\n    $route(to) {\r\n      // 对路由变化作出响应...\r\n      const { histories } = this\r\n      const flag = histories.find(item => item.path === to.path)\r\n      if (flag) {\r\n        return\r\n      }\r\n      const ele = {}\r\n      ele.stageId = to.name\r\n      ele.path = to.path\r\n      ele.routePath = to.matched[to.matched.length - 1].path\r\n      this.histories = [ele, ...histories]\r\n    },\r\n    logined(val) {\r\n      if (val) {\r\n        return\r\n      }\r\n      this.closeAll()\r\n    },\r\n    // 舞台改变时触发\r\n    stageList() {\r\n      this.init()\r\n    },\r\n    histories(arr) {\r\n      if (arr.length < 2) {\r\n        this.eventBus.$emit('noReuse')\r\n      } else {\r\n        this.eventBus.$emit('hasReuse')\r\n      }\r\n    },\r\n  },\r\n  inject: ['eventBus'],\r\n  created() {\r\n    // 关闭窗口时执行\r\n    window.onbeforeunload = () => {\r\n      // 缓存历史记录\r\n      window.localStorage.setItem('history', JSON.stringify(this.histories))\r\n    }\r\n  },\r\n  computed: {\r\n    logined() {\r\n      return this.$store.state.logined\r\n    },\r\n    defaultRoute() {\r\n      return this.$store.state.defaultRoute\r\n    },\r\n    ...mapGetters(['getStageByRoute', 'getStageByName', 'stageList']),\r\n  },\r\n  mounted() {\r\n    this.init()\r\n    this.eventBus.$on('clearTap', () => {\r\n      this.histories = []\r\n    })\r\n  },\r\n  methods: {\r\n    init() {\r\n      const histories = []\r\n\r\n      // 获取当前的历史记录, 可能从本地存储, 可能直接获取当前的\r\n      let localHistory\r\n      if (this.histories.length > 0) {\r\n        localHistory = [...this.histories]\r\n      } else {\r\n        localHistory = window.localStorage.getItem('history') || '[]'\r\n        localHistory = JSON.parse(localHistory)\r\n      }\r\n\r\n      localHistory.forEach(item => {\r\n        let findResult\r\n        if (item.name) {\r\n          findResult = this.getStageByName(item.name)\r\n        } else {\r\n          findResult = this.getStageByRoute(item.routePath)\r\n        }\r\n        if (!findResult) {\r\n          return\r\n        }\r\n        histories.push({\r\n          ...item,\r\n          stageId: findResult.name,\r\n        })\r\n        this.histories = histories\r\n      })\r\n    },\r\n    filterIcon(icon) {\r\n      if (!icon) {\r\n        return false\r\n      }\r\n      return icon.indexOf('/') !== -1\r\n    },\r\n    closeAll() {\r\n      this.histories = []\r\n      this.$router.push(this.defaultRoute)\r\n    },\r\n    close(index) {\r\n      // 检测是否是当前页, 如果是当前页则自动切换路由\r\n      if (this.$route.path === this.histories[index].path) {\r\n        if (index > 0) {\r\n          this.$router.push(this.histories[index - 1].path)\r\n        } else if (this.histories.length > 1) {\r\n          this.$router.push(this.histories[1].path)\r\n        } else {\r\n          this.$router.push(this.defaultRoute)\r\n        }\r\n      }\r\n      // 删除该历史记录\r\n      this.histories.splice(index, 1)\r\n      this.histories = [...this.histories]\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.swiper-slide {\r\n  width: 126px;\r\n  display: flex;\r\n  height: $reusetab-height;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: $reuse-tab-item-background;\r\n  color: $right-side-font-color;\r\n}\r\n\r\n.reuse-tab-wrap {\r\n  bottom: 0;\r\n  left: 0;\r\n  // width: calc(100% -40px);\r\n  height: $reusetab-height;\r\n  background: $header-background;\r\n  font-size: 14px;\r\n  color: #8c98ae;\r\n  display: flex;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  .reuse-tab-item {\r\n    box-sizing: border-box;\r\n    width: auto;\r\n    height: $reusetab-height;\r\n    width: 126px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 1em;\r\n    margin-right: 1px;\r\n    position: relative;\r\n    white-space: nowrap;\r\n\r\n    .el-icon-close {\r\n      opacity: 0;\r\n      position: absolute;\r\n    }\r\n\r\n    &:hover {\r\n      background: $theme;\r\n      border: none;\r\n      color: #fff;\r\n\r\n      .el-icon-close {\r\n        position: absolute;\r\n        display: inline-block;\r\n        width: 14px;\r\n        height: 14px;\r\n        top: 0;\r\n        right: 0;\r\n        opacity: 1;\r\n        border-radius: 0 0 0 14px;\r\n        background: rgba(255, 255, 255, 0.3);\r\n\r\n        &::before {\r\n          font-size: 12px;\r\n          position: absolute;\r\n          right: -1px;\r\n          transform: scale(0.7);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .active {\r\n    box-sizing: border-box;\r\n    height: 40px;\r\n    color: #ffffff;\r\n    background: $theme;\r\n    border: none;\r\n    position: relative;\r\n\r\n    .el-icon-close {\r\n      position: absolute;\r\n      display: inline-block;\r\n      width: 14px;\r\n      height: 14px;\r\n      top: 0;\r\n      right: 0;\r\n      opacity: 1;\r\n      border-radius: 0 0 0 14px;\r\n      background: rgba(255, 255, 255, 0.3);\r\n\r\n      &::before {\r\n        font-size: 12px;\r\n        position: absolute;\r\n        right: -1px;\r\n        transform: scale(0.7);\r\n      }\r\n    }\r\n  }\r\n\r\n  .reuse-tab-wrap {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/layout"}]}