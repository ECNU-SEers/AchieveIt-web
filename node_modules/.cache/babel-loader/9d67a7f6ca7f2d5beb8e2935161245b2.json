{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\views\\admin\\user\\UserInfo.vue","mtime":1584099524339},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\DownLoad\\\\git\\\\achieve\\\\AchieveIt-web\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Admin from '@/sys/models/admin';\nimport User from '@/sys/models/user';\nexport default {\n  props: {\n    submit: {\n      type: Boolean,\n      // 表单是否显示功能按钮\n      default: true\n    },\n    id: {\n      // 用户id\n      type: Number,\n      default: undefined\n    },\n    groups: {\n      // 所有角色\n      type: Array,\n      default: function _default() {}\n    },\n    labelPosition: {\n      // 表单label位置\n      type: String,\n      default: 'right'\n    },\n    info: {\n      // 用户信息\n      type: Object,\n      default: function _default() {}\n    },\n    pageType: {\n      type: String,\n      default: 'add' // 区分编辑页面/添加页面\n\n    }\n  },\n  inject: ['eventBus'],\n  data: function data() {\n    var _this = this;\n\n    // 验证回调函数\n    var checkUserName = function checkUserName(rule, value, callback) {\n      // eslint-disable-line\n      if (!value) {\n        callback(new Error('用户名不能为空'));\n      }\n\n      callback();\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'));\n      } else {\n        if (_this.form.checkPassword !== '') {\n          _this.$refs.form.validateField('confirm_password');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      // 加载动画\n      isEdited: false,\n      // 能否编辑\n      form: {\n        username: '',\n        password: '',\n        confirm_password: '',\n        email: '',\n        group_ids: []\n      },\n      // 验证规则\n      rules: {\n        username: [{\n          validator: checkUserName,\n          trigger: ['blur', 'change'],\n          required: true\n        }],\n        password: [{\n          validator: validatePassword,\n          trigger: 'blur',\n          required: true\n        }],\n        confirm_password: [{\n          validator: validatePassword2,\n          trigger: 'blur',\n          required: true\n        }],\n        email: [{\n          type: 'email',\n          message: '请输入正确的邮箱地址或者不填',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  methods: {\n    // 提交表单\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(formName) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$refs[formName].validate(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(valid) {\n                    var res;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!valid) {\n                              _context.next = 34;\n                              break;\n                            }\n\n                            if (!(_this2.pageType === 'add')) {\n                              _context.next = 17;\n                              break;\n                            }\n\n                            _context.prev = 2;\n                            _this2.loading = true;\n                            _context.next = 6;\n                            return User.register(_this2.form);\n\n                          case 6:\n                            res = _context.sent;\n\n                            if (res.code < window.SUCCESS_CODE) {\n                              _this2.loading = false;\n\n                              _this2.$message.success(\"\".concat(res.message));\n\n                              _this2.eventBus.$emit('addUser', true);\n\n                              _this2.resetForm(formName);\n                            }\n\n                            _context.next = 15;\n                            break;\n\n                          case 10:\n                            _context.prev = 10;\n                            _context.t0 = _context[\"catch\"](2);\n                            _this2.loading = false;\n\n                            _this2.$message.error('新增用户失败');\n\n                            console.log(_context.t0);\n\n                          case 15:\n                            _context.next = 32;\n                            break;\n\n                          case 17:\n                            if (!(_this2.form.email === _this2.info.email && _this2.form.group_ids.sort().toString() === _this2.info.group_ids.sort().toString())) {\n                              _context.next = 20;\n                              break;\n                            }\n\n                            _this2.$emit('handleInfoResult', false);\n\n                            return _context.abrupt(\"return\");\n\n                          case 20:\n                            _context.prev = 20;\n                            _this2.loading = true;\n                            _context.next = 24;\n                            return Admin.updateOneUser(_this2.form.email, _this2.form.group_ids, _this2.id);\n\n                          case 24:\n                            res = _context.sent;\n                            _context.next = 31;\n                            break;\n\n                          case 27:\n                            _context.prev = 27;\n                            _context.t1 = _context[\"catch\"](20);\n                            _this2.loading = false;\n                            console.log(_context.t1);\n\n                          case 31:\n                            if (res.code < window.SUCCESS_CODE) {\n                              _this2.loading = false;\n\n                              _this2.$message.success(\"\".concat(res.message));\n\n                              _this2.$emit('handleInfoResult', true);\n                            } else {\n                              _this2.loading = false;\n\n                              _this2.$message.error(\"\".concat(res.message));\n                            }\n\n                          case 32:\n                            _context.next = 36;\n                            break;\n\n                          case 34:\n                            console.log('error submit!!');\n\n                            _this2.$message.error('请填写正确的信息');\n\n                          case 36:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[2, 10], [20, 27]]);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function submitForm(_x) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      if (this.pageType === 'edit') {\n        this.setInfo();\n      } else {\n        this.form.group_ids = [this.groups[0].id];\n        this.$refs[formName].resetFields();\n      }\n    },\n    setInfo: function setInfo() {\n      this.form.username = this.info.username;\n      this.form.email = this.info.email;\n      var temp = [];\n      this.info.group_ids.forEach(function (item) {\n        temp.push(item.id);\n      });\n      this.form.group_ids = temp;\n    }\n  },\n  // watch: {\n  //   groups: {\n  //     // 默认选中管理员组\n  //     handler() {\n  //       if (this.groups && this.groups[0] && this.groups[0].id) {\n  //         this.form.group_ids = [this.groups[0].id]\n  //       }\n  //     },\n  //     immediate: true,\n  //   },\n  // },\n  created: function created() {\n    // 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\n    if (this.pageType === 'edit') {\n      this.setInfo();\n      this.isEdited = true;\n    }\n  }\n};",{"version":3,"sources":["UserInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <el-form\r\n      :model=\"form\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      :label-position=\"labelPosition\"\r\n      ref=\"form\"\r\n      v-loading=\"loading\"\r\n      label-width=\"100px\"\r\n      @submit.native.prevent\r\n    >\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input size=\"medium\" clearable v-model=\"form.username\" :disabled=\"isEdited\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input\r\n          size=\"medium\"\r\n          clearable\r\n          v-model=\"form.email\"\r\n          :disabled=\"isEdited\"\r\n          auto-complete=\"new-password\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"pageType === 'add'\" label=\"密码\" prop=\"password\">\r\n        <el-input\r\n          size=\"medium\"\r\n          clearable\r\n          type=\"password\"\r\n          v-model=\"form.password\"\r\n          auto-complete=\"new-password\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"pageType === 'add'\" label=\"确认密码\" prop=\"confirm_password\" label-position=\"top\">\r\n        <el-input size=\"medium\" clearable type=\"password\" v-model=\"form.confirm_password\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"pageType !== 'password'\" label=\"选择角色\">\r\n        <!-- <el-select\r\n          size=\"medium\"\r\n          multiple\r\n          v-model=\"form.group_ids\"\r\n          :disabled=\"groups.length === 0\"\r\n          placeholder=\"请选择角色\"\r\n        >\r\n          <el-option v-for=\"item in groups\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"> </el-option>\r\n        </el-select> -->\r\n        <el-checkbox-group v-model=\"form.group_ids\" size=\"small\" style=\"transform: translateY(5px);\">\r\n          <el-checkbox v-for=\"item in groups\" :key=\"item.id\" :label=\"item.id\" border style=\"margin-left: 0\">{{\r\n            item.name\r\n          }}</el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-form-item>\r\n      <el-form-item v-show=\"submit\" class=\"submit\">\r\n        <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\r\n        <el-button @click=\"resetForm('form')\">重 置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Admin from '@/sys/models/admin'\r\nimport User from '@/sys/models/user'\r\n\r\nexport default {\r\n  props: {\r\n    submit: {\r\n      type: Boolean, // 表单是否显示功能按钮\r\n      default: true,\r\n    },\r\n    id: {\r\n      // 用户id\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n    groups: {\r\n      // 所有角色\r\n      type: Array,\r\n      default: () => {},\r\n    },\r\n    labelPosition: {\r\n      // 表单label位置\r\n      type: String,\r\n      default: 'right',\r\n    },\r\n    info: {\r\n      // 用户信息\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    pageType: {\r\n      type: String,\r\n      default: 'add', // 区分编辑页面/添加页面\r\n    },\r\n  },\r\n  inject: ['eventBus'],\r\n  data() {\r\n    // 验证回调函数\r\n    const checkUserName = (rule, value, callback) => {\r\n      // eslint-disable-line\r\n      if (!value) {\r\n        callback(new Error('用户名不能为空'))\r\n      }\r\n      callback()\r\n    }\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 6) {\r\n        callback(new Error('密码长度不能少于6位数'))\r\n      } else {\r\n        if (this.form.checkPassword !== '') {\r\n          this.$refs.form.validateField('confirm_password')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePassword2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      loading: false, // 加载动画\r\n      isEdited: false, // 能否编辑\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        email: '',\r\n        group_ids: [],\r\n      },\r\n      // 验证规则\r\n      rules: {\r\n        username: [\r\n          {\r\n            validator: checkUserName,\r\n            trigger: ['blur', 'change'],\r\n            required: true,\r\n          },\r\n        ],\r\n        password: [{ validator: validatePassword, trigger: 'blur', required: true }],\r\n        confirm_password: [{ validator: validatePassword2, trigger: 'blur', required: true }],\r\n        email: [\r\n          {\r\n            type: 'email',\r\n            message: '请输入正确的邮箱地址或者不填',\r\n            trigger: ['blur', 'change'],\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    // 提交表单\r\n    async submitForm(formName) {\r\n      this.$refs[formName].validate(async valid => {\r\n        // eslint-disable-line\r\n        if (valid) {\r\n          // 新增用户\r\n          let res\r\n          if (this.pageType === 'add') {\r\n            try {\r\n              this.loading = true\r\n              res = await User.register(this.form)\r\n              if (res.code < window.SUCCESS_CODE) {\r\n                this.loading = false\r\n                this.$message.success(`${res.message}`)\r\n                this.eventBus.$emit('addUser', true)\r\n                this.resetForm(formName)\r\n              }\r\n            } catch (e) {\r\n              this.loading = false\r\n              this.$message.error('新增用户失败')\r\n              console.log(e)\r\n            }\r\n          } else {\r\n            // 更新用户信息\r\n            if (\r\n              this.form.email === this.info.email\r\n              && this.form.group_ids.sort().toString() === this.info.group_ids.sort().toString()\r\n            ) {\r\n              this.$emit('handleInfoResult', false)\r\n              return\r\n            }\r\n            try {\r\n              this.loading = true\r\n              res = await Admin.updateOneUser(this.form.email, this.form.group_ids, this.id)\r\n            } catch (e) {\r\n              this.loading = false\r\n              console.log(e)\r\n            }\r\n            if (res.code < window.SUCCESS_CODE) {\r\n              this.loading = false\r\n              this.$message.success(`${res.message}`)\r\n              this.$emit('handleInfoResult', true)\r\n            } else {\r\n              this.loading = false\r\n              this.$message.error(`${res.message}`)\r\n            }\r\n          }\r\n        } else {\r\n          console.log('error submit!!')\r\n          this.$message.error('请填写正确的信息')\r\n        }\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      if (this.pageType === 'edit') {\r\n        this.setInfo()\r\n      } else {\r\n        this.form.group_ids = [this.groups[0].id]\r\n        this.$refs[formName].resetFields()\r\n      }\r\n    },\r\n    setInfo() {\r\n      this.form.username = this.info.username\r\n      this.form.email = this.info.email\r\n      const temp = []\r\n      this.info.group_ids.forEach(item => {\r\n        temp.push(item.id)\r\n      })\r\n      this.form.group_ids = temp\r\n    },\r\n  },\r\n  // watch: {\r\n  //   groups: {\r\n  //     // 默认选中管理员组\r\n  //     handler() {\r\n  //       if (this.groups && this.groups[0] && this.groups[0].id) {\r\n  //         this.form.group_ids = [this.groups[0].id]\r\n  //       }\r\n  //     },\r\n  //     immediate: true,\r\n  //   },\r\n  // },\r\n  created() {\r\n    // 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\r\n    if (this.pageType === 'edit') {\r\n      this.setInfo()\r\n      this.isEdited = true\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  margin-top: 20px;\r\n  margin-left: -5px;\r\n  max-width: 800px;\r\n\r\n  .submit {\r\n    float: left;\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n// .el-radio-role {\r\n//   &.user-info {\r\n//     display: flex;\r\n//     flex-wrap: wrap;\r\n//     > .el-radio {\r\n//       width: 150px;\r\n//       margin-left: 0px !important;\r\n//       margin-right: 10px;\r\n//       margin-bottom: 20px;\r\n//       white-space: normal;\r\n//       display: flex;\r\n//     }\r\n//   }\r\n// }\r\n</style>\r\n"],"sourceRoot":"src/views/admin/user"}]}