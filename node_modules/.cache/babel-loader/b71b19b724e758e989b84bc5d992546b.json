{"remainingRequest":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\plugins\\LinCmsUi\\views\\table\\TableCombo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\src\\plugins\\LinCmsUi\\views\\table\\TableCombo.vue","mtime":1584099524293},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DownLoad\\git\\achieve\\AchieveIt-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\DownLoad\\\\git\\\\achieve\\\\AchieveIt-web\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LinSearch from '@/components/base/search/lin-search';\nimport { tableColumn } from './data';\nimport movie from '../../models/movie.js';\nexport default {\n  components: {\n    LinSearch: LinSearch\n  },\n  data: function data() {\n    return {\n      tableData: [],\n      loading: false,\n      Hidden: true,\n      // 默认隐藏自定义排序列\n      searchKeyword: '',\n      // 定制列相关\n      checkList: [],\n      filterTableColumn: [],\n      // 分页相关\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n      currentPage: 1,\n      // 默认获取第一页的数据\n      pageCount: 10,\n      // 每页10条数据\n      total_nums: 180,\n      // 角色内的用户总数\n      // 固定列相关\n      dialogTableVisible: false,\n      fixedLeftList: [],\n      fixedRightList: [],\n      value: '',\n      // 单元格编辑相关\n      editRow: 0,\n      showTooltip: true\n    };\n  },\n  computed: {},\n  created: function created() {\n    var _this = this;\n\n    // 获取数据\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount);\n\n    this.tableColumn = tableColumn; // 操作栏\n\n    this.operate = [{\n      name: '编辑',\n      func: 'handleEdit',\n      type: 'primary'\n    }, {\n      name: '删除',\n      func: 'handleDelete',\n      type: 'danger'\n    }]; // 定制列\n\n    this.tempCheckList = tableColumn.map(function (v) {\n      return v.label;\n    }).slice();\n    this.checkList = tableColumn.map(function (v) {\n      return v.label;\n    });\n    this.filterTableColumn = tableColumn.filter(function (v) {\n      return _this.checkList.indexOf(v.label) > -1;\n    });\n  },\n  methods: {\n    // 获取数据\n    _getTableData: function _getTableData(start, count) {\n      var res = movie.getTop250(start, count);\n      res.map(function (item) {\n        var temp = item;\n        temp.editFlag = false;\n        return '';\n      });\n      this.tableData = _toConsumableArray(res);\n    },\n    rowClick: function rowClick(val) {\n      console.log(val);\n    },\n    // 定制列\n    handleChange: function handleChange() {\n      var _this2 = this;\n\n      this.filterTableColumn = tableColumn.filter(function (v) {\n        return _this2.checkList.indexOf(v.label) > -1;\n      });\n    },\n    showRowOperateModal: function showRowOperateModal() {},\n    // 变更排序\n    handleSort: function handleSort(val, rowData) {\n      console.log('rowData', rowData);\n      this.$message({\n        type: 'success',\n        message: \"\\u6392\\u5E8F\\u5DF2\\u66F4\\u6539\\u4E3A\\uFF1A\".concat(val)\n      });\n    },\n    // 推荐\n    handleRecommend: function handleRecommend(val, rowData) {\n      var _this3 = this;\n\n      this.loading = true;\n      console.log(val, rowData);\n\n      if (val) {\n        setTimeout(function () {\n          _this3.loading = false;\n\n          _this3.$message({\n            type: 'success',\n            message: '推荐成功'\n          });\n        }, 1000);\n      } else {\n        setTimeout(function () {\n          _this3.loading = false;\n\n          _this3.$message({\n            type: 'success',\n            message: '取消推荐'\n          });\n        }, 1000);\n      }\n    },\n    expandChange: function expandChange(row, expandedRows) {\n      console.log(row, expandedRows);\n    },\n    // 单元格编辑\n    handleCellEdit: function handleCellEdit(row) {\n      row.editFlag = true; // eslint-disable-line\n\n      this.$set(this.filterTableColumn[7], 'width', 200);\n      this.tempEditRemark = row.remark;\n      this.editRow++;\n    },\n    handleCellSave: function handleCellSave(row) {\n      var _this4 = this;\n\n      row.editFlag = false; // eslint-disable-line\n\n      setTimeout(function () {\n        _this4.editRow--;\n\n        _this4.$message({\n          type: 'success',\n          message: '修改成功'\n        });\n      }, 1000);\n    },\n    handleCellCancel: function handleCellCancel(row) {\n      row.editFlag = false; // eslint-disable-line\n\n      console.log(this.tempEditRemark);\n      row.remark = this.tempEditRemark; // eslint-disable-line\n\n      this.editRow--;\n    },\n    // 切换分页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val) {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                setTimeout(function () {\n                  _this5._getTableData((_this5.currentPage - 1) * _this5.pageCount, _this5.pageCount);\n\n                  _this5.loading = false;\n                }, 1000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    // 操作列\n    buttonMethods: function buttonMethods(func, index, row) {\n      var self = this;\n      var methods = this.$options.methods;\n      methods[func](self, index, row);\n    },\n    handleEdit: function handleEdit(self, index, row) {\n      self.handleCellEdit(row);\n      console.log(index, row);\n    },\n    handleDelete: function handleDelete(self, index, val) {\n      console.log(val);\n      self.$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                self.loading = true; // eslint-disable-line\n\n                setTimeout(function () {\n                  self.tableData.splice(index, 1);\n                  self.loading = false; // eslint-disable-line\n                }, 1000);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    },\n    // 搜索\n    onQueryChange: function onQueryChange(query) {\n      var _this6 = this;\n\n      this.searchKeyword = query.trim();\n\n      if (!query) {\n        this._getTableData(0, 20);\n\n        return;\n      }\n\n      this.loading = true;\n      setTimeout(function () {\n        _this6.loading = false;\n        _this6.tableData = movie.getDataByQuery(_this6.searchKeyword);\n      }, 1000);\n    }\n  },\n  watch: {\n    // 监听固定列变化\n    fixedLeftList: function fixedLeftList() {\n      var _this7 = this;\n\n      this.filterTableColumn.map(function (item, index) {\n        if (_this7.fixedLeftList.indexOf(item.label) > -1) {\n          _this7.$set(_this7.filterTableColumn[index], 'fixed', 'left');\n        } else if (_this7.fixedRightList.indexOf(item.label) === -1) {\n          _this7.$set(_this7.filterTableColumn[index], 'fixed', false);\n        }\n\n        return '';\n      });\n      console.log(this.filterTableColumn);\n    },\n    fixedRightList: function fixedRightList() {\n      var _this8 = this;\n\n      this.filterTableColumn.map(function (item, index) {\n        if (_this8.fixedRightList.indexOf(item.label) > -1) {\n          _this8.$set(_this8.filterTableColumn[index], 'fixed', 'right');\n        } else if (_this8.fixedLeftList.indexOf(item.label) === -1) {\n          _this8.$set(_this8.filterTableColumn[index], 'fixed', false);\n        }\n\n        return '';\n      });\n      console.log(this.filterTableColumn);\n    },\n    editRow: function editRow() {\n      if (this.filterTableColumn[7]) {\n        this.editRow === 0 // eslint-disable-line\n        ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\n        : null; // eslint-disable-line\n      }\n\n      return '';\n    }\n  }\n};",{"version":3,"sources":["TableCombo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA,OAAA,SAAA,MAAA,qCAAA;AACA,SAAA,WAAA,QAAA,QAAA;AACA,OAAA,KAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAGA;AACA,MAAA,aAAA,EAAA,EAJA;AAKA;AACA,MAAA,SAAA,EAAA,EANA;AAOA,MAAA,iBAAA,EAAA,EAPA;AAQA;AACA,MAAA,iBAAA,EAAA,IATA;AASA;AACA,MAAA,WAAA,EAAA,CAVA;AAUA;AACA,MAAA,SAAA,EAAA,EAXA;AAWA;AACA,MAAA,UAAA,EAAA,GAZA;AAYA;AACA;AACA,MAAA,kBAAA,EAAA,KAdA;AAeA,MAAA,aAAA,EAAA,EAfA;AAgBA,MAAA,cAAA,EAAA,EAhBA;AAiBA,MAAA,KAAA,EAAA,EAjBA;AAkBA;AACA,MAAA,OAAA,EAAA,CAnBA;AAoBA,MAAA,WAAA,EAAA;AApBA,KAAA;AAsBA,GA3BA;AA4BA,EAAA,QAAA,EAAA,EA5BA;AA6BA,EAAA,OA7BA,qBA6BA;AAAA;;AACA;AACA,SAAA,aAAA,CAAA,CAAA,KAAA,WAAA,GAAA,CAAA,IAAA,KAAA,SAAA,EAAA,KAAA,SAAA;;AACA,SAAA,WAAA,GAAA,WAAA,CAHA,CAIA;;AACA,SAAA,OAAA,GAAA,CACA;AAAA,MAAA,IAAA,EAAA,IAAA;AAAA,MAAA,IAAA,EAAA,YAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,IAAA,EAAA,IAAA;AAAA,MAAA,IAAA,EAAA,cAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KAFA,CAAA,CALA,CASA;;AACA,SAAA,aAAA,GAAA,WAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,KAAA;AAAA,KAAA,EAAA,KAAA,EAAA;AACA,SAAA,SAAA,GAAA,WAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,KAAA;AAAA,KAAA,CAAA;AACA,SAAA,iBAAA,GAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,aAAA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA;AAAA,KAAA,CAAA;AACA,GA1CA;AA2CA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,yBAEA,KAFA,EAEA,KAFA,EAEA;AACA,UAAA,GAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA;AACA,QAAA,IAAA,CAAA,QAAA,GAAA,KAAA;AACA,eAAA,EAAA;AACA,OAJA;AAKA,WAAA,SAAA,sBAAA,GAAA;AACA,KAVA;AAYA,IAAA,QAZA,oBAYA,GAZA,EAYA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,KAdA;AAgBA;AACA,IAAA,YAjBA,0BAiBA;AAAA;;AACA,WAAA,iBAAA,GAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA;AAAA,OAAA,CAAA;AACA,KAnBA;AAoBA,IAAA,mBApBA,iCAoBA,CAAA,CApBA;AAsBA;AACA,IAAA,UAvBA,sBAuBA,GAvBA,EAuBA,OAvBA,EAuBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,OAAA;AACA,WAAA,QAAA,CAAA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,OAAA,sDAAA,GAAA;AAFA,OAAA;AAIA,KA7BA;AA+BA;AACA,IAAA,eAhCA,2BAgCA,GAhCA,EAgCA,OAhCA,EAgCA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,OAAA;;AACA,UAAA,GAAA,EAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,IAAA,EAAA,SADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA;AAIA,SANA,EAMA,IANA,CAAA;AAOA,OARA,MAQA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA;AACA,YAAA,IAAA,EAAA,SADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA;AAIA,SANA,EAMA,IANA,CAAA;AAOA;AACA,KApDA;AAsDA,IAAA,YAtDA,wBAsDA,GAtDA,EAsDA,YAtDA,EAsDA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,YAAA;AACA,KAxDA;AA0DA;AACA,IAAA,cA3DA,0BA2DA,GA3DA,EA2DA;AACA,MAAA,GAAA,CAAA,QAAA,GAAA,IAAA,CADA,CACA;;AACA,WAAA,IAAA,CAAA,KAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,GAAA;AACA,WAAA,cAAA,GAAA,GAAA,CAAA,MAAA;AACA,WAAA,OAAA;AACA,KAhEA;AAiEA,IAAA,cAjEA,0BAiEA,GAjEA,EAiEA;AAAA;;AACA,MAAA,GAAA,CAAA,QAAA,GAAA,KAAA,CADA,CACA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OANA,EAMA,IANA,CAAA;AAOA,KA1EA;AA2EA,IAAA,gBA3EA,4BA2EA,GA3EA,EA2EA;AACA,MAAA,GAAA,CAAA,QAAA,GAAA,KAAA,CADA,CACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,cAAA;AACA,MAAA,GAAA,CAAA,MAAA,GAAA,KAAA,cAAA,CAHA,CAGA;;AACA,WAAA,OAAA;AACA,KAhFA;AAkFA;AACA,IAAA,mBAnFA;AAAA;AAAA;AAAA,gDAmFA,GAnFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoFA,qBAAA,WAAA,GAAA,GAAA;AACA,qBAAA,OAAA,GAAA,IAAA;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,MAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,WAAA,GAAA,CAAA,IAAA,MAAA,CAAA,SAAA,EAAA,MAAA,CAAA,SAAA;;AACA,kBAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,iBAHA,EAGA,IAHA,CAAA;;AAtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4FA;AACA,IAAA,aA7FA,yBA6FA,IA7FA,EA6FA,KA7FA,EA6FA,GA7FA,EA6FA;AACA,UAAA,IAAA,GAAA,IAAA;AADA,UAEA,OAFA,GAEA,KAAA,QAFA,CAEA,OAFA;AAGA,MAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA;AACA,KAjGA;AAkGA,IAAA,UAlGA,sBAkGA,IAlGA,EAkGA,KAlGA,EAkGA,GAlGA,EAkGA;AACA,MAAA,IAAA,CAAA,cAAA,CAAA,GAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,GAAA;AACA,KArGA;AAsGA,IAAA,YAtGA,wBAsGA,IAtGA,EAsGA,KAtGA,EAsGA,GAtGA,EAsGA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,MAAA,IAAA,CACA,QADA,CACA,oBADA,EACA,IADA,EACA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OADA,EAMA,IANA;AAAA;AAAA;AAAA;AAAA,+BAMA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CADA,CACA;;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,kBAAA,IAAA,CAAA,OAAA,GAAA,KAAA,CAFA,CAEA;AACA,iBAHA,EAGA,IAHA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANA;AAaA,KArHA;AAuHA;AACA,IAAA,aAxHA,yBAwHA,KAxHA,EAwHA;AAAA;;AACA,WAAA,aAAA,GAAA,KAAA,CAAA,IAAA,EAAA;;AACA,UAAA,CAAA,KAAA,EAAA;AACA,aAAA,aAAA,CAAA,CAAA,EAAA,EAAA;;AACA;AACA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,KAAA,CAAA,cAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AACA,OAHA,EAGA,IAHA,CAAA;AAIA;AAnIA,GA3CA;AAiLA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,aAFA,2BAEA;AAAA;;AACA,WAAA,iBAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,MAAA,CAAA,aAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA,MAAA;AACA,SAFA,MAEA,IAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA,KAAA;AACA;;AACA,eAAA,EAAA;AACA,OAPA;AAQA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,iBAAA;AACA,KAZA;AAaA,IAAA,cAbA,4BAaA;AAAA;;AACA,WAAA,iBAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA,OAAA;AACA,SAFA,MAEA,IAAA,MAAA,CAAA,aAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA,KAAA;AACA;;AACA,eAAA,EAAA;AACA,OAPA;AAQA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,iBAAA;AACA,KAvBA;AAwBA,IAAA,OAxBA,qBAwBA;AACA,UAAA,KAAA,iBAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,OAAA,KAAA,CAAA,CAAA;AAAA,UACA,KAAA,IAAA,CAAA,KAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,GAAA,CADA,CACA;AADA,UAEA,IAFA,CADA,CAGA;AACA;;AACA,aAAA,EAAA;AACA;AA/BA;AAjLA,CAAA","sourcesContent":["<template>\r\n  <!-- 列表页面 -->\r\n  <div class=\"tableSample\">\r\n    <div class=\"header\">\r\n      <div class=\"header-left\"><p class=\"title\">豆瓣电影TOP250</p></div>\r\n      <div class=\"header-right\">\r\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入电影名\" />\r\n        <div style=\"margin-left:30px\">\r\n          <el-button type=\"primary\" @click=\"dialogTableVisible = !dialogTableVisible\">列操作</el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"table-main\">\r\n      <el-dialog top=\"5vh\" width=\"60%\" :visible.sync=\"dialogTableVisible\">\r\n        <!-- 定制列 -->\r\n        <span>选择要展示的列:</span>\r\n        <el-checkbox-group v-model=\"checkList\" @change=\"handleChange\" class=\"m-20\">\r\n          <el-checkbox\r\n            :disabled=\"item === '电影名' || item === '排名'\"\r\n            :label=\"item\"\r\n            v-for=\"item in tempCheckList\"\r\n            :key=\"item\"\r\n          />\r\n        </el-checkbox-group>\r\n        <!-- 固定列 -->\r\n        <span>选择固定在左侧的列:</span>\r\n        <el-checkbox-group v-model=\"fixedLeftList\" class=\"m-20\">\r\n          <el-checkbox\r\n            :disabled=\"fixedRightList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\r\n            :label=\"item\"\r\n            v-for=\"item in tempCheckList\"\r\n            :key=\"item\"\r\n          />\r\n        </el-checkbox-group>\r\n        <span>选择固定在右侧的列:</span>\r\n        <el-checkbox-group v-model=\"fixedRightList\" class=\"m-20\">\r\n          <el-checkbox\r\n            :disabled=\"fixedLeftList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\r\n            :label=\"item\"\r\n            v-for=\"item in tempCheckList\"\r\n            :key=\"item\"\r\n          />\r\n        </el-checkbox-group>\r\n      </el-dialog>\r\n      <el-table\r\n        :data=\"tableData\"\r\n        @row-dblclick=\"rowClick\"\r\n        @expand-change=\"expandChange\"\r\n        v-loading=\"loading\"\r\n        id=\"out-table'\"\r\n      >\r\n        <!-- 展示摘要 -->\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <div class=\"summary\">\r\n              <img :src=\"props.row.thumb\" alt />\r\n              <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n                <el-form-item label=\"电影名\">\r\n                  <span>{{ props.row.title }}</span>\r\n                </el-form-item>\r\n                <el-form-item label=\"导演\">\r\n                  <span>{{ props.row.directors }}</span>\r\n                </el-form-item>\r\n                <el-form-item label=\"主演\">\r\n                  <span>{{ props.row.casts }}</span>\r\n                </el-form-item>\r\n              </el-form>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 开始循环 -->\r\n        <template v-for=\"item in filterTableColumn\">\r\n          <!-- 自定义排序 -->\r\n          <el-table-column label=\"排序\" v-if=\"item.label === '排序'\" v-bind:key=\"item.label\">\r\n            <template slot-scope=\"props\">\r\n              <input\r\n                type=\"number\"\r\n                class=\"sort-input\"\r\n                v-model=\"props.row.sorting\"\r\n                @blur=\"handleSort(props.row.sorting, props.row)\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 正常表单列 -->\r\n          <el-table-column\r\n            v-bind:key=\"item.label\"\r\n            v-if=\"!item.noRepeat\"\r\n            :prop=\"item.prop\"\r\n            :label=\"item.label\"\r\n            :show-overflow-tooltip=\"true\"\r\n            :fixed=\"item.fixed ? item.fixed : false\"\r\n            :width=\"item.width ? item.width : ''\"\r\n          ></el-table-column>\r\n          <!-- 排序 评分 -->\r\n          <el-table-column\r\n            label=\"评分\"\r\n            :prop=\"item.prop\"\r\n            sortable\r\n            v-bind:key=\"item.label\"\r\n            :fixed=\"item.fixed ? item.fixed : false\"\r\n            :width=\"item.width ? item.width : ''\"\r\n            v-if=\"item.label === '评分'\"\r\n          ></el-table-column>\r\n          <!-- 单元格编辑 -->\r\n          <el-table-column\r\n            v-bind:key=\"item.label\"\r\n            label=\"备注\"\r\n            prop=\"remark\"\r\n            :width=\"item.width\"\r\n            show-overflow-tooltip\r\n            v-if=\"item.label === '备注'\"\r\n          >\r\n            <template slot-scope=\"props\">\r\n              <div v-if=\"!props.row.editFlag\" class=\"table-edit\">\r\n                <div @click=\"handleEdit(props.row)\" class=\"content\">{{ props.row.remark }}</div>\r\n                <div class=\"cell-icon\" @click=\"handleCellEdit(props.row)\"><i class=\"el-icon-edit\"></i></div>\r\n              </div>\r\n              <div v-else class=\"table-edit\">\r\n                <el-input v-model=\"props.row.remark\" placeholder></el-input>\r\n                <div class=\"cell-icon-edit\">\r\n                  <div class=\"cell-save\" @click=\"handleCellSave(props.row)\"><i class=\"el-icon-check\"></i></div>\r\n                  <div class=\"cell-cancel\" @click=\"handleCellCancel(props.row)\"><i class=\"el-icon-close\"></i></div>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <!-- 推荐 -->\r\n          <el-table-column label=\"推荐\" v-if=\"item.label === '推荐'\" v-bind:key=\"item.label\">\r\n            <template slot-scope=\"props\">\r\n              <el-switch\r\n                v-model=\"props.row.recommend\"\r\n                active-color=\"#3963bc\"\r\n                @change=\"handleRecommend($event, props.row)\"\r\n              ></el-switch>\r\n            </template>\r\n          </el-table-column>\r\n        </template>\r\n        <!-- 操作列 -->\r\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"170\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              v-for=\"(item, index) in operate\"\r\n              :type=\"item.type\"\r\n              plain\r\n              size=\"mini\"\r\n              :key=\"index\"\r\n              @click.native.prevent.stop=\"buttonMethods(item.func, scope.$index, scope.row)\"\r\n              >{{ item.name }}</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination\" v-if=\"!searchKeyword\">\r\n        <el-pagination\r\n          @current-change=\"handleCurrentChange\"\r\n          :background=\"true\"\r\n          :page-size=\"pageCount\"\r\n          :current-page=\"currentPage\"\r\n          v-if=\"refreshPagination\"\r\n          layout=\"prev, pager, next, jumper\"\r\n          :total=\"total_nums\"\r\n        ></el-pagination>\r\n      </div>\r\n    </div>\r\n    <source-code\r\n      link=\"https://github.com/TaleLin/lin-cms-vue/blob/master/src/plugins/LinCmsUi/views/table/TableCombo.vue\"\r\n    ></source-code>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LinSearch from '@/components/base/search/lin-search'\r\nimport { tableColumn } from './data'\r\nimport movie from '../../models/movie.js'\r\n\r\nexport default {\r\n  components: {\r\n    LinSearch,\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      loading: false,\r\n      Hidden: true, // 默认隐藏自定义排序列\r\n      searchKeyword: '',\r\n      // 定制列相关\r\n      checkList: [],\r\n      filterTableColumn: [],\r\n      // 分页相关\r\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\r\n      currentPage: 1, // 默认获取第一页的数据\r\n      pageCount: 10, // 每页10条数据\r\n      total_nums: 180, // 角色内的用户总数\r\n      // 固定列相关\r\n      dialogTableVisible: false,\r\n      fixedLeftList: [],\r\n      fixedRightList: [],\r\n      value: '',\r\n      // 单元格编辑相关\r\n      editRow: 0,\r\n      showTooltip: true,\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {\r\n    // 获取数据\r\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\r\n    this.tableColumn = tableColumn\r\n    // 操作栏\r\n    this.operate = [\r\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\r\n      { name: '删除', func: 'handleDelete', type: 'danger' },\r\n    ]\r\n    // 定制列\r\n    this.tempCheckList = tableColumn.map(v => v.label).slice()\r\n    this.checkList = tableColumn.map(v => v.label)\r\n    this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\r\n  },\r\n  methods: {\r\n    // 获取数据\r\n    _getTableData(start, count) {\r\n      const res = movie.getTop250(start, count)\r\n      res.map(item => {\r\n        const temp = item\r\n        temp.editFlag = false\r\n        return ''\r\n      })\r\n      this.tableData = [...res]\r\n    },\r\n\r\n    rowClick(val) {\r\n      console.log(val)\r\n    },\r\n\r\n    // 定制列\r\n    handleChange() {\r\n      this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\r\n    },\r\n    showRowOperateModal() {},\r\n\r\n    // 变更排序\r\n    handleSort(val, rowData) {\r\n      console.log('rowData', rowData)\r\n      this.$message({\r\n        type: 'success',\r\n        message: `排序已更改为：${val}`,\r\n      })\r\n    },\r\n\r\n    // 推荐\r\n    handleRecommend(val, rowData) {\r\n      this.loading = true\r\n      console.log(val, rowData)\r\n      if (val) {\r\n        setTimeout(() => {\r\n          this.loading = false\r\n          this.$message({\r\n            type: 'success',\r\n            message: '推荐成功',\r\n          })\r\n        }, 1000)\r\n      } else {\r\n        setTimeout(() => {\r\n          this.loading = false\r\n          this.$message({\r\n            type: 'success',\r\n            message: '取消推荐',\r\n          })\r\n        }, 1000)\r\n      }\r\n    },\r\n\r\n    expandChange(row, expandedRows) {\r\n      console.log(row, expandedRows)\r\n    },\r\n\r\n    // 单元格编辑\r\n    handleCellEdit(row) {\r\n      row.editFlag = true // eslint-disable-line\r\n      this.$set(this.filterTableColumn[7], 'width', 200)\r\n      this.tempEditRemark = row.remark\r\n      this.editRow++\r\n    },\r\n    handleCellSave(row) {\r\n      row.editFlag = false // eslint-disable-line\r\n      setTimeout(() => {\r\n        this.editRow--\r\n        this.$message({\r\n          type: 'success',\r\n          message: '修改成功',\r\n        })\r\n      }, 1000)\r\n    },\r\n    handleCellCancel(row) {\r\n      row.editFlag = false // eslint-disable-line\r\n      console.log(this.tempEditRemark)\r\n      row.remark = this.tempEditRemark // eslint-disable-line\r\n      this.editRow--\r\n    },\r\n\r\n    // 切换分页\r\n    async handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.loading = true\r\n      setTimeout(() => {\r\n        this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\r\n        this.loading = false\r\n      }, 1000)\r\n    },\r\n\r\n    // 操作列\r\n    buttonMethods(func, index, row) {\r\n      const self = this\r\n      const { methods } = this.$options\r\n      methods[func](self, index, row)\r\n    },\r\n    handleEdit(self, index, row) {\r\n      self.handleCellEdit(row)\r\n      console.log(index, row)\r\n    },\r\n    handleDelete(self, index, val) {\r\n      console.log(val)\r\n      self\r\n        .$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        })\r\n        .then(async () => {\r\n          self.loading = true // eslint-disable-line\r\n          setTimeout(() => {\r\n            self.tableData.splice(index, 1)\r\n            self.loading = false // eslint-disable-line\r\n          }, 1000)\r\n        })\r\n    },\r\n\r\n    // 搜索\r\n    onQueryChange(query) {\r\n      this.searchKeyword = query.trim()\r\n      if (!query) {\r\n        this._getTableData(0, 20)\r\n        return\r\n      }\r\n      this.loading = true\r\n      setTimeout(() => {\r\n        this.loading = false\r\n        this.tableData = movie.getDataByQuery(this.searchKeyword)\r\n      }, 1000)\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    // 监听固定列变化\r\n    fixedLeftList() {\r\n      this.filterTableColumn.map((item, index) => {\r\n        if (this.fixedLeftList.indexOf(item.label) > -1) {\r\n          this.$set(this.filterTableColumn[index], 'fixed', 'left')\r\n        } else if (this.fixedRightList.indexOf(item.label) === -1) {\r\n          this.$set(this.filterTableColumn[index], 'fixed', false)\r\n        }\r\n        return ''\r\n      })\r\n      console.log(this.filterTableColumn)\r\n    },\r\n    fixedRightList() {\r\n      this.filterTableColumn.map((item, index) => {\r\n        if (this.fixedRightList.indexOf(item.label) > -1) {\r\n          this.$set(this.filterTableColumn[index], 'fixed', 'right')\r\n        } else if (this.fixedLeftList.indexOf(item.label) === -1) {\r\n          this.$set(this.filterTableColumn[index], 'fixed', false)\r\n        }\r\n        return ''\r\n      })\r\n      console.log(this.filterTableColumn)\r\n    },\r\n    editRow() {\r\n      if (this.filterTableColumn[7]) {\r\n        this.editRow === 0 // eslint-disable-line\r\n          ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\r\n          : null // eslint-disable-line\r\n      }\r\n      return ''\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tableSample {\r\n  padding: 0 0 30px;\r\n\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 30px;\r\n    border-bottom: 1px solid #dae1ed;\r\n\r\n    .header-left {\r\n      float: left;\r\n\r\n      .title {\r\n        height: 59px;\r\n        line-height: 59px;\r\n        color: $parent-title-color;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .header-right {\r\n      float: right;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  .table-main {\r\n    padding: 0 30px;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  .top-operate {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 15px;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  .sort-input {\r\n    width: 50px;\r\n    background: none;\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .table-edit {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    .content {\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .cell-icon {\r\n      cursor: pointer;\r\n      color: #3963bc;\r\n      font-size: 16px;\r\n    }\r\n\r\n    .cell-icon-edit {\r\n      display: flex;\r\n      margin-left: 20px;\r\n      width: 50px;\r\n      justify-content: space-between;\r\n\r\n      .cell-cancel {\r\n        cursor: pointer;\r\n        color: #3963bc;\r\n        font-size: 16px;\r\n      }\r\n\r\n      .cell-save {\r\n        cursor: pointer;\r\n        color: #3963bc;\r\n        font-size: 16px;\r\n        margin-right: -20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .m-20 {\r\n    margin-bottom: 10px;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  .summary {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: row;\r\n\r\n    img {\r\n      width: 135px;\r\n      height: 200px;\r\n    }\r\n\r\n    .demo-table-expand {\r\n      font-size: 0;\r\n      margin-left: 30px;\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      label {\r\n        width: 90px;\r\n        color: #99a9bf;\r\n      }\r\n\r\n      .el-form-item {\r\n        margin-right: 0;\r\n        margin-bottom: 0;\r\n        display: flex;\r\n        flex-direction: row;\r\n      }\r\n    }\r\n  }\r\n\r\n  .pagination {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin: 20px;\r\n  }\r\n}\r\n// dialog\r\n.tableSample /deep/ .el-dialog__footer {\r\n  text-align: left;\r\n  padding-left: 30px;\r\n}\r\n\r\n.tableSample /deep/ .el-dialog__header {\r\n  padding-left: 30px;\r\n}\r\n\r\n.tableSample /deep/ .el-dialog__body {\r\n  padding: 30px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/plugins/LinCmsUi/views/table"}]}