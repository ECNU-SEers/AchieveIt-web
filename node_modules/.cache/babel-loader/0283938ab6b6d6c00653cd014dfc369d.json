{"remainingRequest":"/Users/syj/Git-Portal/AchieveIt-web/node_modules/babel-loader/lib/index.js!/Users/syj/Git-Portal/AchieveIt-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/syj/Git-Portal/AchieveIt-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/syj/Git-Portal/AchieveIt-web/src/plugins/LinCmsUi/views/table/TableCombo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/syj/Git-Portal/AchieveIt-web/src/plugins/LinCmsUi/views/table/TableCombo.vue","mtime":1583737757305},{"path":"/Users/syj/Git-Portal/AchieveIt-web/node_modules/cache-loader/dist/cjs.js","mtime":1583737753486},{"path":"/Users/syj/Git-Portal/AchieveIt-web/node_modules/babel-loader/lib/index.js","mtime":1583737753370},{"path":"/Users/syj/Git-Portal/AchieveIt-web/node_modules/cache-loader/dist/cjs.js","mtime":1583737753486},{"path":"/Users/syj/Git-Portal/AchieveIt-web/node_modules/vue-loader/lib/index.js","mtime":1583737757117}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/syj/Git-Portal/AchieveIt-web/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LinSearch from '@/components/base/search/lin-search';\nimport { tableColumn } from './data';\nimport movie from '../../models/movie.js';\nexport default {\n  components: {\n    LinSearch: LinSearch\n  },\n  data: function data() {\n    return {\n      tableData: [],\n      loading: false,\n      Hidden: true,\n      // 默认隐藏自定义排序列\n      searchKeyword: '',\n      // 定制列相关\n      checkList: [],\n      filterTableColumn: [],\n      // 分页相关\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n      currentPage: 1,\n      // 默认获取第一页的数据\n      pageCount: 10,\n      // 每页10条数据\n      total_nums: 180,\n      // 角色内的用户总数\n      // 固定列相关\n      dialogTableVisible: false,\n      fixedLeftList: [],\n      fixedRightList: [],\n      value: '',\n      // 单元格编辑相关\n      editRow: 0,\n      showTooltip: true\n    };\n  },\n  computed: {},\n  created: function created() {\n    var _this = this;\n\n    // 获取数据\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount);\n\n    this.tableColumn = tableColumn; // 操作栏\n\n    this.operate = [{\n      name: '编辑',\n      func: 'handleEdit',\n      type: 'primary'\n    }, {\n      name: '删除',\n      func: 'handleDelete',\n      type: 'danger'\n    }]; // 定制列\n\n    this.tempCheckList = tableColumn.map(function (v) {\n      return v.label;\n    }).slice();\n    this.checkList = tableColumn.map(function (v) {\n      return v.label;\n    });\n    this.filterTableColumn = tableColumn.filter(function (v) {\n      return _this.checkList.indexOf(v.label) > -1;\n    });\n  },\n  methods: {\n    // 获取数据\n    _getTableData: function _getTableData(start, count) {\n      var res = movie.getTop250(start, count);\n      res.map(function (item) {\n        var temp = item;\n        temp.editFlag = false;\n        return '';\n      });\n      this.tableData = _toConsumableArray(res);\n    },\n    rowClick: function rowClick(val) {\n      console.log(val);\n    },\n    // 定制列\n    handleChange: function handleChange() {\n      var _this2 = this;\n\n      this.filterTableColumn = tableColumn.filter(function (v) {\n        return _this2.checkList.indexOf(v.label) > -1;\n      });\n    },\n    showRowOperateModal: function showRowOperateModal() {},\n    // 变更排序\n    handleSort: function handleSort(val, rowData) {\n      console.log('rowData', rowData);\n      this.$message({\n        type: 'success',\n        message: \"\\u6392\\u5E8F\\u5DF2\\u66F4\\u6539\\u4E3A\\uFF1A\".concat(val)\n      });\n    },\n    // 推荐\n    handleRecommend: function handleRecommend(val, rowData) {\n      var _this3 = this;\n\n      this.loading = true;\n      console.log(val, rowData);\n\n      if (val) {\n        setTimeout(function () {\n          _this3.loading = false;\n\n          _this3.$message({\n            type: 'success',\n            message: '推荐成功'\n          });\n        }, 1000);\n      } else {\n        setTimeout(function () {\n          _this3.loading = false;\n\n          _this3.$message({\n            type: 'success',\n            message: '取消推荐'\n          });\n        }, 1000);\n      }\n    },\n    expandChange: function expandChange(row, expandedRows) {\n      console.log(row, expandedRows);\n    },\n    // 单元格编辑\n    handleCellEdit: function handleCellEdit(row) {\n      row.editFlag = true; // eslint-disable-line\n\n      this.$set(this.filterTableColumn[7], 'width', 200);\n      this.tempEditRemark = row.remark;\n      this.editRow++;\n    },\n    handleCellSave: function handleCellSave(row) {\n      var _this4 = this;\n\n      row.editFlag = false; // eslint-disable-line\n\n      setTimeout(function () {\n        _this4.editRow--;\n\n        _this4.$message({\n          type: 'success',\n          message: '修改成功'\n        });\n      }, 1000);\n    },\n    handleCellCancel: function handleCellCancel(row) {\n      row.editFlag = false; // eslint-disable-line\n\n      console.log(this.tempEditRemark);\n      row.remark = this.tempEditRemark; // eslint-disable-line\n\n      this.editRow--;\n    },\n    // 切换分页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(val) {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                setTimeout(function () {\n                  _this5._getTableData((_this5.currentPage - 1) * _this5.pageCount, _this5.pageCount);\n\n                  _this5.loading = false;\n                }, 1000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    // 操作列\n    buttonMethods: function buttonMethods(func, index, row) {\n      var self = this;\n      var methods = this.$options.methods;\n      methods[func](self, index, row);\n    },\n    handleEdit: function handleEdit(self, index, row) {\n      self.handleCellEdit(row);\n      console.log(index, row);\n    },\n    handleDelete: function handleDelete(self, index, val) {\n      console.log(val);\n      self.$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                self.loading = true; // eslint-disable-line\n\n                setTimeout(function () {\n                  self.tableData.splice(index, 1);\n                  self.loading = false; // eslint-disable-line\n                }, 1000);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    },\n    // 搜索\n    onQueryChange: function onQueryChange(query) {\n      var _this6 = this;\n\n      this.searchKeyword = query.trim();\n\n      if (!query) {\n        this._getTableData(0, 20);\n\n        return;\n      }\n\n      this.loading = true;\n      setTimeout(function () {\n        _this6.loading = false;\n        _this6.tableData = movie.getDataByQuery(_this6.searchKeyword);\n      }, 1000);\n    }\n  },\n  watch: {\n    // 监听固定列变化\n    fixedLeftList: function fixedLeftList() {\n      var _this7 = this;\n\n      this.filterTableColumn.map(function (item, index) {\n        if (_this7.fixedLeftList.indexOf(item.label) > -1) {\n          _this7.$set(_this7.filterTableColumn[index], 'fixed', 'left');\n        } else if (_this7.fixedRightList.indexOf(item.label) === -1) {\n          _this7.$set(_this7.filterTableColumn[index], 'fixed', false);\n        }\n\n        return '';\n      });\n      console.log(this.filterTableColumn);\n    },\n    fixedRightList: function fixedRightList() {\n      var _this8 = this;\n\n      this.filterTableColumn.map(function (item, index) {\n        if (_this8.fixedRightList.indexOf(item.label) > -1) {\n          _this8.$set(_this8.filterTableColumn[index], 'fixed', 'right');\n        } else if (_this8.fixedLeftList.indexOf(item.label) === -1) {\n          _this8.$set(_this8.filterTableColumn[index], 'fixed', false);\n        }\n\n        return '';\n      });\n      console.log(this.filterTableColumn);\n    },\n    editRow: function editRow() {\n      if (this.filterTableColumn[7]) {\n        this.editRow === 0 // eslint-disable-line\n        ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\n        : null; // eslint-disable-line\n      }\n\n      return '';\n    }\n  }\n};",{"version":3,"sources":["TableCombo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 列表页面 -->\n  <div class=\"tableSample\">\n    <div class=\"header\">\n      <div class=\"header-left\"><p class=\"title\">豆瓣电影TOP250</p></div>\n      <div class=\"header-right\">\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入电影名\" />\n        <div style=\"margin-left:30px\">\n          <el-button type=\"primary\" @click=\"dialogTableVisible = !dialogTableVisible\">列操作</el-button>\n        </div>\n      </div>\n    </div>\n    <div class=\"table-main\">\n      <el-dialog top=\"5vh\" width=\"60%\" :visible.sync=\"dialogTableVisible\">\n        <!-- 定制列 -->\n        <span>选择要展示的列:</span>\n        <el-checkbox-group v-model=\"checkList\" @change=\"handleChange\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"item === '电影名' || item === '排名'\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n        <!-- 固定列 -->\n        <span>选择固定在左侧的列:</span>\n        <el-checkbox-group v-model=\"fixedLeftList\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"fixedRightList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n        <span>选择固定在右侧的列:</span>\n        <el-checkbox-group v-model=\"fixedRightList\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"fixedLeftList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n      </el-dialog>\n      <el-table\n        :data=\"tableData\"\n        @row-dblclick=\"rowClick\"\n        @expand-change=\"expandChange\"\n        v-loading=\"loading\"\n        id=\"out-table'\"\n      >\n        <!-- 展示摘要 -->\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"props\">\n            <div class=\"summary\">\n              <img :src=\"props.row.thumb\" alt />\n              <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                <el-form-item label=\"电影名\">\n                  <span>{{ props.row.title }}</span>\n                </el-form-item>\n                <el-form-item label=\"导演\">\n                  <span>{{ props.row.directors }}</span>\n                </el-form-item>\n                <el-form-item label=\"主演\">\n                  <span>{{ props.row.casts }}</span>\n                </el-form-item>\n              </el-form>\n            </div>\n          </template>\n        </el-table-column>\n        <!-- 开始循环 -->\n        <template v-for=\"item in filterTableColumn\">\n          <!-- 自定义排序 -->\n          <el-table-column label=\"排序\" v-if=\"item.label === '排序'\" v-bind:key=\"item.label\">\n            <template slot-scope=\"props\">\n              <input\n                type=\"number\"\n                class=\"sort-input\"\n                v-model=\"props.row.sorting\"\n                @blur=\"handleSort(props.row.sorting, props.row)\"\n              />\n            </template>\n          </el-table-column>\n          <!-- 正常表单列 -->\n          <el-table-column\n            v-bind:key=\"item.label\"\n            v-if=\"!item.noRepeat\"\n            :prop=\"item.prop\"\n            :label=\"item.label\"\n            :show-overflow-tooltip=\"true\"\n            :fixed=\"item.fixed ? item.fixed : false\"\n            :width=\"item.width ? item.width : ''\"\n          ></el-table-column>\n          <!-- 排序 评分 -->\n          <el-table-column\n            label=\"评分\"\n            :prop=\"item.prop\"\n            sortable\n            v-bind:key=\"item.label\"\n            :fixed=\"item.fixed ? item.fixed : false\"\n            :width=\"item.width ? item.width : ''\"\n            v-if=\"item.label === '评分'\"\n          ></el-table-column>\n          <!-- 单元格编辑 -->\n          <el-table-column\n            v-bind:key=\"item.label\"\n            label=\"备注\"\n            prop=\"remark\"\n            :width=\"item.width\"\n            show-overflow-tooltip\n            v-if=\"item.label === '备注'\"\n          >\n            <template slot-scope=\"props\">\n              <div v-if=\"!props.row.editFlag\" class=\"table-edit\">\n                <div @click=\"handleEdit(props.row)\" class=\"content\">{{ props.row.remark }}</div>\n                <div class=\"cell-icon\" @click=\"handleCellEdit(props.row)\"><i class=\"el-icon-edit\"></i></div>\n              </div>\n              <div v-else class=\"table-edit\">\n                <el-input v-model=\"props.row.remark\" placeholder></el-input>\n                <div class=\"cell-icon-edit\">\n                  <div class=\"cell-save\" @click=\"handleCellSave(props.row)\"><i class=\"el-icon-check\"></i></div>\n                  <div class=\"cell-cancel\" @click=\"handleCellCancel(props.row)\"><i class=\"el-icon-close\"></i></div>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 推荐 -->\n          <el-table-column label=\"推荐\" v-if=\"item.label === '推荐'\" v-bind:key=\"item.label\">\n            <template slot-scope=\"props\">\n              <el-switch\n                v-model=\"props.row.recommend\"\n                active-color=\"#3963bc\"\n                @change=\"handleRecommend($event, props.row)\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n        </template>\n        <!-- 操作列 -->\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"170\">\n          <template slot-scope=\"scope\">\n            <el-button\n              v-for=\"(item, index) in operate\"\n              :type=\"item.type\"\n              plain\n              size=\"mini\"\n              :key=\"index\"\n              @click.native.prevent.stop=\"buttonMethods(item.func, scope.$index, scope.row)\"\n              >{{ item.name }}</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination\" v-if=\"!searchKeyword\">\n        <el-pagination\n          @current-change=\"handleCurrentChange\"\n          :background=\"true\"\n          :page-size=\"pageCount\"\n          :current-page=\"currentPage\"\n          v-if=\"refreshPagination\"\n          layout=\"prev, pager, next, jumper\"\n          :total=\"total_nums\"\n        ></el-pagination>\n      </div>\n    </div>\n    <source-code\n      link=\"https://github.com/TaleLin/lin-cms-vue/blob/master/src/plugins/LinCmsUi/views/table/TableCombo.vue\"\n    ></source-code>\n  </div>\n</template>\n\n<script>\nimport LinSearch from '@/components/base/search/lin-search'\nimport { tableColumn } from './data'\nimport movie from '../../models/movie.js'\n\nexport default {\n  components: {\n    LinSearch,\n  },\n  data() {\n    return {\n      tableData: [],\n      loading: false,\n      Hidden: true, // 默认隐藏自定义排序列\n      searchKeyword: '',\n      // 定制列相关\n      checkList: [],\n      filterTableColumn: [],\n      // 分页相关\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n      currentPage: 1, // 默认获取第一页的数据\n      pageCount: 10, // 每页10条数据\n      total_nums: 180, // 角色内的用户总数\n      // 固定列相关\n      dialogTableVisible: false,\n      fixedLeftList: [],\n      fixedRightList: [],\n      value: '',\n      // 单元格编辑相关\n      editRow: 0,\n      showTooltip: true,\n    }\n  },\n  computed: {},\n  created() {\n    // 获取数据\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\n    this.tableColumn = tableColumn\n    // 操作栏\n    this.operate = [\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\n      { name: '删除', func: 'handleDelete', type: 'danger' },\n    ]\n    // 定制列\n    this.tempCheckList = tableColumn.map(v => v.label).slice()\n    this.checkList = tableColumn.map(v => v.label)\n    this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\n  },\n  methods: {\n    // 获取数据\n    _getTableData(start, count) {\n      const res = movie.getTop250(start, count)\n      res.map(item => {\n        const temp = item\n        temp.editFlag = false\n        return ''\n      })\n      this.tableData = [...res]\n    },\n\n    rowClick(val) {\n      console.log(val)\n    },\n\n    // 定制列\n    handleChange() {\n      this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\n    },\n    showRowOperateModal() {},\n\n    // 变更排序\n    handleSort(val, rowData) {\n      console.log('rowData', rowData)\n      this.$message({\n        type: 'success',\n        message: `排序已更改为：${val}`,\n      })\n    },\n\n    // 推荐\n    handleRecommend(val, rowData) {\n      this.loading = true\n      console.log(val, rowData)\n      if (val) {\n        setTimeout(() => {\n          this.loading = false\n          this.$message({\n            type: 'success',\n            message: '推荐成功',\n          })\n        }, 1000)\n      } else {\n        setTimeout(() => {\n          this.loading = false\n          this.$message({\n            type: 'success',\n            message: '取消推荐',\n          })\n        }, 1000)\n      }\n    },\n\n    expandChange(row, expandedRows) {\n      console.log(row, expandedRows)\n    },\n\n    // 单元格编辑\n    handleCellEdit(row) {\n      row.editFlag = true // eslint-disable-line\n      this.$set(this.filterTableColumn[7], 'width', 200)\n      this.tempEditRemark = row.remark\n      this.editRow++\n    },\n    handleCellSave(row) {\n      row.editFlag = false // eslint-disable-line\n      setTimeout(() => {\n        this.editRow--\n        this.$message({\n          type: 'success',\n          message: '修改成功',\n        })\n      }, 1000)\n    },\n    handleCellCancel(row) {\n      row.editFlag = false // eslint-disable-line\n      console.log(this.tempEditRemark)\n      row.remark = this.tempEditRemark // eslint-disable-line\n      this.editRow--\n    },\n\n    // 切换分页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      setTimeout(() => {\n        this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\n        this.loading = false\n      }, 1000)\n    },\n\n    // 操作列\n    buttonMethods(func, index, row) {\n      const self = this\n      const { methods } = this.$options\n      methods[func](self, index, row)\n    },\n    handleEdit(self, index, row) {\n      self.handleCellEdit(row)\n      console.log(index, row)\n    },\n    handleDelete(self, index, val) {\n      console.log(val)\n      self\n        .$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        })\n        .then(async () => {\n          self.loading = true // eslint-disable-line\n          setTimeout(() => {\n            self.tableData.splice(index, 1)\n            self.loading = false // eslint-disable-line\n          }, 1000)\n        })\n    },\n\n    // 搜索\n    onQueryChange(query) {\n      this.searchKeyword = query.trim()\n      if (!query) {\n        this._getTableData(0, 20)\n        return\n      }\n      this.loading = true\n      setTimeout(() => {\n        this.loading = false\n        this.tableData = movie.getDataByQuery(this.searchKeyword)\n      }, 1000)\n    },\n  },\n\n  watch: {\n    // 监听固定列变化\n    fixedLeftList() {\n      this.filterTableColumn.map((item, index) => {\n        if (this.fixedLeftList.indexOf(item.label) > -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', 'left')\n        } else if (this.fixedRightList.indexOf(item.label) === -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', false)\n        }\n        return ''\n      })\n      console.log(this.filterTableColumn)\n    },\n    fixedRightList() {\n      this.filterTableColumn.map((item, index) => {\n        if (this.fixedRightList.indexOf(item.label) > -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', 'right')\n        } else if (this.fixedLeftList.indexOf(item.label) === -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', false)\n        }\n        return ''\n      })\n      console.log(this.filterTableColumn)\n    },\n    editRow() {\n      if (this.filterTableColumn[7]) {\n        this.editRow === 0 // eslint-disable-line\n          ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\n          : null // eslint-disable-line\n      }\n      return ''\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.tableSample {\n  padding: 0 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 30px;\n    border-bottom: 1px solid #dae1ed;\n\n    .header-left {\n      float: left;\n\n      .title {\n        height: 59px;\n        line-height: 59px;\n        color: $parent-title-color;\n        font-size: 16px;\n        font-weight: 500;\n      }\n    }\n\n    .header-right {\n      float: right;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  .table-main {\n    padding: 0 30px;\n    margin-top: 30px;\n  }\n\n  .top-operate {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n    margin-top: 30px;\n  }\n\n  .sort-input {\n    width: 50px;\n    background: none;\n    justify-content: space-around;\n  }\n\n  .table-edit {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    .content {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .cell-icon {\n      cursor: pointer;\n      color: #3963bc;\n      font-size: 16px;\n    }\n\n    .cell-icon-edit {\n      display: flex;\n      margin-left: 20px;\n      width: 50px;\n      justify-content: space-between;\n\n      .cell-cancel {\n        cursor: pointer;\n        color: #3963bc;\n        font-size: 16px;\n      }\n\n      .cell-save {\n        cursor: pointer;\n        color: #3963bc;\n        font-size: 16px;\n        margin-right: -20px;\n      }\n    }\n  }\n\n  .m-20 {\n    margin-bottom: 10px;\n    margin-top: 5px;\n  }\n\n  .summary {\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row;\n\n    img {\n      width: 135px;\n      height: 200px;\n    }\n\n    .demo-table-expand {\n      font-size: 0;\n      margin-left: 30px;\n      display: flex;\n      flex-direction: column;\n\n      label {\n        width: 90px;\n        color: #99a9bf;\n      }\n\n      .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        display: flex;\n        flex-direction: row;\n      }\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n// dialog\n.tableSample /deep/ .el-dialog__footer {\n  text-align: left;\n  padding-left: 30px;\n}\n\n.tableSample /deep/ .el-dialog__header {\n  padding-left: 30px;\n}\n\n.tableSample /deep/ .el-dialog__body {\n  padding: 30px;\n}\n</style>\n"],"sourceRoot":"src/plugins/LinCmsUi/views/table"}]}