{"remainingRequest":"/Users/long/Documents/Software Development Practices/code/lin-cms-vue/node_modules/babel-loader/lib/index.js!/Users/long/Documents/Software Development Practices/code/lin-cms-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/long/Documents/Software Development Practices/code/lin-cms-vue/src/models/book.js","dependencies":[{"path":"/Users/long/Documents/Software Development Practices/code/lin-cms-vue/src/models/book.js","mtime":1582552228982},{"path":"/Users/long/Documents/Software Development Practices/code/lin-cms-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/long/Documents/Software Development Practices/code/lin-cms-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/long/Documents/Software Development Practices/code/lin-cms-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/long/Documents/Software Development Practices/code/lin-cms-vue/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* eslint-disable class-methods-use-this */\nimport _axios, { get, put, _delete } from '@/lin/plugins/axios'; // 我们通过 class 这样的语法糖使模型这个概念更加具象化，其优点：耦合性低、可维护性。\n\nvar Book =\n/*#__PURE__*/\nfunction () {\n  function Book() {\n    _classCallCheck(this, Book);\n  }\n\n  _createClass(Book, [{\n    key: \"addBook\",\n    // constructor() {}\n    // 类中的方法可以代表一个用户行为\n    value: function () {\n      var _addBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", _axios({\n                  method: 'post',\n                  url: 'v1/book',\n                  data: data,\n                  handleError: true\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function addBook(_x) {\n        return _addBook.apply(this, arguments);\n      }\n\n      return addBook;\n    }() // 在这里通过 async await 语法糖让代码同步执行\n    // 1. await 一定要搭配 async 来使用\n    // 2. await 后面跟的是一个 Promise 对象\n\n  }, {\n    key: \"getBook\",\n    value: function () {\n      var _getBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return get(\"v1/book/\".concat(id));\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getBook(_x2) {\n        return _getBook.apply(this, arguments);\n      }\n\n      return getBook;\n    }()\n  }, {\n    key: \"editBook\",\n    value: function () {\n      var _editBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id, info) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return put(\"v1/book/\".concat(id), info);\n\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function editBook(_x3, _x4) {\n        return _editBook.apply(this, arguments);\n      }\n\n      return editBook;\n    }()\n  }, {\n    key: \"delectBook\",\n    value: function () {\n      var _delectBook = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _delete(\"v1/book/\".concat(id));\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function delectBook(_x5) {\n        return _delectBook.apply(this, arguments);\n      }\n\n      return delectBook;\n    }()\n  }, {\n    key: \"getBooks\",\n    value: function () {\n      var _getBooks = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", _axios({\n                  method: 'get',\n                  url: 'v1/book',\n                  handleError: true\n                }));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getBooks() {\n        return _getBooks.apply(this, arguments);\n      }\n\n      return getBooks;\n    }()\n  }]);\n\n  return Book;\n}();\n\nexport default new Book();",{"version":3,"sources":["/Users/long/Documents/Software Development Practices/code/lin-cms-vue/src/models/book.js"],"names":["_axios","get","put","_delete","Book","data","method","url","handleError","id","res","info"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,IAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,OAA3B,QAA0C,qBAA1C,C,CAEA;;IACMC,I;;;;;;;;;AACJ;AAEA;;;;gDACcC,I;;;;;iDACLL,MAAM,CAAC;AACZM,kBAAAA,MAAM,EAAE,MADI;AAEZC,kBAAAA,GAAG,EAAE,SAFO;AAGZF,kBAAAA,IAAI,EAAJA,IAHY;AAIZG,kBAAAA,WAAW,EAAE;AAJD,iBAAD,C;;;;;;;;;;;;;;;QAQf;AACA;AACA;;;;;;;iDACcC,E;;;;;;;uBACMR,GAAG,mBAAYQ,EAAZ,E;;;AAAfC,gBAAAA,G;kDACCA,G;;;;;;;;;;;;;;;;;;;;;iDAGMD,E,EAAIE,I;;;;;;;uBACCT,GAAG,mBAAYO,EAAZ,GAAkBE,IAAlB,C;;;AAAfD,gBAAAA,G;kDACCA,G;;;;;;;;;;;;;;;;;;;;;iDAGQD,E;;;;;;;uBACGN,OAAO,mBAAYM,EAAZ,E;;;AAAnBC,gBAAAA,G;kDACCA,G;;;;;;;;;;;;;;;;;;;;;;;;;;kDAIAV,MAAM,CAAC;AACZM,kBAAAA,MAAM,EAAE,KADI;AAEZC,kBAAAA,GAAG,EAAE,SAFO;AAGZC,kBAAAA,WAAW,EAAE;AAHD,iBAAD,C;;;;;;;;;;;;;;;;;;;;;AAQjB,eAAe,IAAIJ,IAAJ,EAAf","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport _axios, { get, put, _delete } from '@/lin/plugins/axios'\n\n// 我们通过 class 这样的语法糖使模型这个概念更加具象化，其优点：耦合性低、可维护性。\nclass Book {\n  // constructor() {}\n\n  // 类中的方法可以代表一个用户行为\n  async addBook(data) {\n    return _axios({\n      method: 'post',\n      url: 'v1/book',\n      data,\n      handleError: true,\n    })\n  }\n\n  // 在这里通过 async await 语法糖让代码同步执行\n  // 1. await 一定要搭配 async 来使用\n  // 2. await 后面跟的是一个 Promise 对象\n  async getBook(id) {\n    const res = await get(`v1/book/${id}`)\n    return res\n  }\n\n  async editBook(id, info) {\n    const res = await put(`v1/book/${id}`, info)\n    return res\n  }\n\n  async delectBook(id) {\n    const res = await _delete(`v1/book/${id}`)\n    return res\n  }\n\n  async getBooks() {\n    return _axios({\n      method: 'get',\n      url: 'v1/book',\n      handleError: true,\n    })\n  }\n}\n\nexport default new Book()\n"]}]}